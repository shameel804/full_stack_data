[
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 5) {\n    console.log('Greater');\n} else {\n    console.log('Smaller');\n}",
    "o": [
      "Greater",
      "Smaller",
      "10",
      "undefined"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for an if-else statement in JavaScript?",
    "o": [
      "if (condition) { /* code */ } else { /* code */ }",
      "if condition { /* code */ } else { /* code */ }",
      "if (condition) then { /* code */ } else { /* code */ }",
      "if (condition) => { /* code */ } else => { /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let day = 3;\nswitch(day) {\n    case 1: console.log('Monday'); break;\n    case 2: console.log('Tuesday'); break;\n    case 3: console.log('Wednesday'); break;\n    default: console.log('Invalid day');\n}",
    "o": [
      "Wednesday",
      "Monday",
      "Tuesday",
      "Invalid day"
    ]
  },
  {
    "q": "Which statement is used to terminate a case in a switch structure?",
    "o": [
      "break",
      "continue",
      "return",
      "exit"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    console.log(i);\n}",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "1 2"
    ]
  },
  {
    "q": "Which loop is guaranteed to execute at least once?",
    "o": [
      "do-while",
      "while",
      "for",
      "for-in"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let i = 5;\nwhile (i > 0) {\n    console.log(i);\n    i--;\n}",
    "o": [
      "5 4 3 2 1",
      "5 4 3 2 1 0",
      "4 3 2 1 0",
      "Infinite loop"
    ]
  },
  {
    "q": "Which of the following is NOT a valid loop structure in JavaScript?",
    "o": [
      "loop-until",
      "for",
      "while",
      "do-while"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let num = 15;\nif (num % 3 === 0 && num % 5 === 0) {\n    console.log('FizzBuzz');\n} else if (num % 3 === 0) {\n    console.log('Fizz');\n} else if (num % 5 === 0) {\n    console.log('Buzz');\n}",
    "o": [
      "FizzBuzz",
      "Fizz",
      "Buzz",
      "15"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for a for loop in JavaScript?",
    "o": [
      "for (let i = 0; i < 10; i++) { /* code */ }",
      "for (i = 0; i < 10; i++) { /* code */ }",
      "for (let i = 0, i < 10, i++) { /* code */ }",
      "for i in 0..10 { /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let age = 18;\nif (age >= 18) {\n    console.log('Adult');\n} else {\n    console.log('Minor');\n}",
    "o": [
      "Adult",
      "Minor",
      "18",
      "None"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for a nested if-else statement in JavaScript?",
    "o": [
      "if (condition1) { if (condition2) { /* code */ } }",
      "if (condition1) then { if (condition2) { /* code */ } }",
      "nested if (condition1) { if (condition2) { /* code */ } }",
      "if (condition1) nested (condition2) { /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n    case 'banana': console.log('Yellow'); break;\n    case 'apple': console.log('Red'); break;\n    default: console.log('Unknown');\n}",
    "o": [
      "Red",
      "Yellow",
      "Unknown",
      "apple"
    ]
  },
  {
    "q": "Which keyword is used to specify a default case in a switch statement?",
    "o": [
      "default",
      "else",
      "case",
      "break"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "1 3 5",
      "1 2 3 4 5",
      "2 4",
      "0 1 2 3 4 5"
    ]
  },
  {
    "q": "Which loop structure is best suited when the number of iterations is unknown?",
    "o": [
      "while",
      "for",
      "do-while",
      "for...of"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let i = 0;\ndo {\n    console.log(i);\n    i++;\n} while (i < 3);",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "1 2"
    ]
  },
  {
    "q": "Which of the following is NOT a valid loop control statement in JavaScript?",
    "o": [
      "stop",
      "break",
      "continue",
      "return"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 5;\nif (x > 10) {\n    console.log('A');\n} else if (x > 3) {\n    console.log('B');\n} else {\n    console.log('C');\n}",
    "o": [
      "B",
      "A",
      "C",
      "5"
    ]
  },
  {
    "q": "Which loop is used to iterate over the properties of an object in JavaScript?",
    "o": [
      "for...in",
      "for",
      "while",
      "do-while"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let temperature = 25;\nif (temperature > 30) {\n    console.log('Hot');\n} else if (temperature > 20) {\n    console.log('Warm');\n} else {\n    console.log('Cold');\n}",
    "o": [
      "Warm",
      "Hot",
      "Cold",
      "25"
    ]
  },
  {
    "q": "Which operator is commonly used in if-else conditions to test multiple conditions?",
    "o": [
      "&& (logical AND)",
      "|| (logical OR)",
      "! (logical NOT)",
      "?? (nullish coalescing)"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n    case 'A': console.log('Excellent'); break;\n    case 'B': console.log('Good'); break;\n    case 'C': console.log('Average'); break;\n    default: console.log('Unknown');\n}",
    "o": [
      "Good",
      "Excellent",
      "Average",
      "Unknown"
    ]
  },
  {
    "q": "What happens if you omit the 'break' statement in a switch case?",
    "o": [
      "Execution falls through to the next case",
      "The switch statement throws an error",
      "The default case automatically executes",
      "The switch statement terminates"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 10; i > 0; i -= 2) {\n    console.log(i);\n}",
    "o": [
      "10 8 6 4 2",
      "10 9 8 7 6 5 4 3 2 1",
      "8 6 4 2",
      "10 8 6 4 2 0"
    ]
  },
  {
    "q": "Which loop is most appropriate when you need to execute code at least once?",
    "o": [
      "do-while",
      "for",
      "while",
      "for...of"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(count);\n    count++;\n}",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "1 2"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to write an infinite loop in JavaScript?",
    "o": [
      "for (let i = 0; i < 10; )",
      "while (true)",
      "for (;;)",
      "do { } while (true)"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let num = 7;\nif (num % 2 === 0) {\n    console.log('Even');\n} else {\n    console.log('Odd');\n}",
    "o": [
      "Odd",
      "Even",
      "7",
      "None"
    ]
  },
  {
    "q": "Which loop is specifically designed for iterating over arrays in JavaScript?",
    "o": [
      "for...of",
      "for...in",
      "while",
      "do-while"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 5, y = 10;\nif (x > y) {\n    console.log('x is greater');\n} else {\n    console.log('y is greater');\n}",
    "o": [
      "y is greater",
      "x is greater",
      "10",
      "5"
    ]
  },
  {
    "q": "Which statement immediately exits a loop in JavaScript?",
    "o": [
      "break",
      "continue",
      "return",
      "exit"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let loggedIn = true;\nlet message = loggedIn ? 'Welcome' : 'Please login';\nconsole.log(message);",
    "o": [
      "Welcome",
      "Please login",
      "true",
      "undefined"
    ]
  },
  {
    "q": "Which of these is the correct syntax for a ternary operator in JavaScript?",
    "o": [
      "condition ? expr1 : expr2",
      "condition : expr1 ? expr2",
      "condition then expr1 else expr2",
      "condition ? expr1 else expr2"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let num = 2;\nswitch(num * 2) {\n  case 3: console.log('Three'); break;\n  case 4: console.log('Four'); break;\n  case 5: console.log('Five'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Four",
      "Three",
      "Five",
      "Unknown"
    ]
  },
  {
    "q": "In a switch statement, what happens if no case matches and there's no default case?",
    "o": [
      "The switch statement exits silently",
      "It throws an error",
      "It executes the first case",
      "It goes into an infinite loop"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 0; i < 5; i++) {\n  if (i === 3) continue;\n  console.log(i);\n}",
    "o": [
      "0 1 2 4",
      "0 1 2 3 4",
      "1 2 3 4",
      "0 1 2"
    ]
  },
  {
    "q": "Which loop structure would be most appropriate for iterating through an array backwards?",
    "o": [
      "for (let i = arr.length-1; i >= 0; i--)",
      "for (let item of arr.reverse())",
      "while (arr.length > 0)",
      "do { } while (arr.pop())"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\nwhile (x < 3) {\n  x++;\n  if (x === 2) break;\n  console.log(x);\n}",
    "o": [
      "1",
      "1 2",
      "1 2 3",
      "2"
    ]
  },
  {
    "q": "What is the purpose of the 'continue' statement in loops?",
    "o": [
      "Skips the current iteration and moves to the next",
      "Exits the loop entirely",
      "Restarts the loop from the beginning",
      "Pauses the loop execution"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let a = 5, b = 10;\nif (a > b || b > a) {\n  console.log('Condition met');\n} else {\n  console.log('Condition not met');\n}",
    "o": [
      "Condition met",
      "Condition not met",
      "true",
      "false"
    ]
  },
  {
    "q": "Which of these is NOT a valid way to write an if statement in JavaScript?",
    "o": [
      "if condition { }",
      "if (condition) { }",
      "if (condition) { } else { }",
      "if (condition) { } else if (condition) { }"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let i = 1;\ndo {\n  console.log(i);\n  i++;\n} while (i <= 1);",
    "o": [
      "1",
      "1 2",
      "2",
      "No output"
    ]
  },
  {
    "q": "Which statement about switch cases is NOT true in JavaScript?",
    "o": [
      "Case values must be numbers",
      "Case values can be strings",
      "Multiple cases can execute the same code",
      "The default case is optional"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let score = 75;\nif (score >= 90) console.log('A');\nelse if (score >= 80) console.log('B');\nelse if (score >= 70) console.log('C');\nelse console.log('D');",
    "o": [
      "C",
      "B",
      "A",
      "D"
    ]
  },
  {
    "q": "Which of these is the correct way to write a multi-condition if statement checking if x is between 5 and 10?",
    "o": [
      "if (x > 5 && x < 10)",
      "if (5 < x < 10)",
      "if (x > 5 || x < 10)",
      "if (x > 5 AND x < 10)"
    ]
  },
  {
    "q": "What is the output of the following switch statement?",
    "l": "javascript",
    "c": "let day = 'Tuesday';\nswitch (day) {\n  case 'Monday':\n  case 'Tuesday':\n  case 'Wednesday': console.log('Weekday'); break;\n  case 'Saturday': console.log('Weekend'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Weekday",
      "Weekend",
      "Tuesday",
      "Unknown"
    ]
  },
  {
    "q": "What is the purpose of the 'default' case in a switch statement?",
    "o": [
      "Executes when no other cases match",
      "Must be included in every switch statement",
      "Is executed first before other cases",
      "Terminates the switch statement"
    ]
  },
  {
    "q": "What is the output of the following for loop?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 4; i++) {\n  if (i % 2 === 0) continue;\n  output += i;\n}\nconsole.log(output);",
    "o": [
      "13",
      "0123",
      "024",
      "123"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing user input until they enter 'quit'?",
    "o": [
      "while (input !== 'quit')",
      "for (let i = 0; i < input.length; i++)",
      "do...while (true)",
      "for (let char of input)"
    ]
  },
  {
    "q": "What is the output of the following while loop?",
    "l": "javascript",
    "c": "let x = 3;\nwhile (x > 0) {\n  x--;\n  if (x === 1) break;\n  console.log(x);\n}",
    "o": [
      "2",
      "2 1 0",
      "3 2 1",
      "2 1"
    ]
  },
  {
    "q": "What is the key difference between while and do-while loops?",
    "o": [
      "do-while always executes at least once",
      "while loops can't use break statements",
      "do-while is faster",
      "while loops require an incrementer"
    ]
  },
  {
    "q": "What is the output of the following nested if statement?",
    "l": "javascript",
    "c": "let a = 5, b = 10;\nif (a > 2) {\n  if (b < 15) console.log('Condition met');\n  else console.log('Condition not met');\n}",
    "o": [
      "Condition met",
      "Condition not met",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid loop control statement?",
    "o": [
      "skip",
      "break",
      "continue",
      "return"
    ]
  },
  {
    "q": "What is the output of the following code with a labeled loop?",
    "l": "javascript",
    "c": "outer: for (let i = 0; i < 3; i++) {\n  inner: for (let j = 0; j < 3; j++) {\n    if (i === 1 && j === 1) break outer;\n    console.log(i, j);\n  }\n}",
    "o": [
      "0 0, 0 1, 0 2, 1 0",
      "0 0, 0 1, 0 2, 1 0, 1 1",
      "0 0, 1 0, 2 0",
      "0 0, 0 1, 1 0, 1 1"
    ]
  },
  {
    "q": "Which statement about switch cases is true regarding strict comparison?",
    "o": [
      "Uses === for case matching",
      "Uses == for case matching",
      "Does type conversion before matching",
      "Only works with number cases"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\nwhile (x++ < 3) {\n  if (x === 2) continue;\n  console.log(x);\n}",
    "o": [
      "1 3",
      "1 2 3",
      "2 3",
      "0 1 2"
    ]
  },
  {
    "q": "Which of these correctly implements an if-else statement checking if a number is positive, negative, or zero?",
    "o": [
      "if (num > 0) { /* positive */ } else if (num < 0) { /* negative */ } else { /* zero */ }",
      "if (num > 0) { /* positive */ } else (num < 0) { /* negative */ } else { /* zero */ }",
      "if (num > 0) { /* positive */ } elseif (num < 0) { /* negative */ } else { /* zero */ }",
      "if (num > 0) then { /* positive */ } else if (num < 0) { /* negative */ } else { /* zero */ }"
    ]
  },
  {
    "q": "What is the output of the following switch statement?",
    "l": "javascript",
    "c": "let fruit = 'Banana';\nswitch (fruit.toLowerCase()) {\n  case 'apple': console.log('Red'); break;\n  case 'banana': console.log('Yellow'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Yellow",
      "Red",
      "Unknown",
      "Banana"
    ]
  },
  {
    "q": "What is the purpose of the 'break' statement in loops?",
    "o": [
      "Immediately terminates the loop",
      "Skips to the next iteration",
      "Restarts the loop from the beginning",
      "Pauses the loop temporarily"
    ]
  },
  {
    "q": "What is the output of the following for loop with a conditional?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i <= 5; i++) {\n  if (i % 2 === 0) result += i;\n}\nconsole.log(result);",
    "o": [
      "24",
      "12345",
      "135",
      "246"
    ]
  },
  {
    "q": "Which loop would be most efficient for iterating through array elements when you need the index?",
    "o": [
      "for (let i = 0; i < arr.length; i++)",
      "for (let item of arr)",
      "while (arr.length > 0)",
      "arr.forEach()"
    ]
  },
  {
    "q": "What is the output of the following do-while loop?",
    "l": "javascript",
    "c": "let i = 5;\ndo {\n  console.log(i);\n  i -= 2;\n} while (i > 0);",
    "o": [
      "5 3 1",
      "5 3",
      "3 1",
      "5 3 1 -1"
    ]
  },
  {
    "q": "Which of these is NOT a valid conditional structure in JavaScript?",
    "o": [
      "unless (condition) { }",
      "if (condition) { }",
      "if (condition) { } else { }",
      "condition ? expr1 : expr2"
    ]
  },
  {
    "q": "What is the output of the following nested loop?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 1; i < 3; i++) {\n  for (let j = 1; j < 3; j++) {\n    output += i + j;\n  }\n}\nconsole.log(output);",
    "o": [
      "2324",
      "2345",
      "1234",
      "2334"
    ]
  },
  {
    "q": "Which statement about switch cases is true regarding fall-through behavior?",
    "o": [
      "Execution continues to next case without break",
      "It automatically breaks after each case",
      "Fall-through only happens with numbers",
      "Default case must come last to prevent fall-through"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 5) {\n  if (count === 3) {\n    count += 2;\n    continue;\n  }\n  console.log(count);\n  count++;\n}",
    "o": [
      "0 1 2 4",
      "0 1 2 3 4",
      "0 1 2 5",
      "1 2 3 4"
    ]
  },
  {
    "q": "Which of these is the correct way to write an if statement that executes only when x is either 5 or 10?",
    "o": [
      "if (x === 5 || x === 10)",
      "if (x == 5 || 10)",
      "if (x === 5 && x === 10)",
      "if (x === (5 || 10))"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple cases?",
    "l": "javascript",
    "c": "let color = 'red';\nswitch (color) {\n  case 'red':\n  case 'blue': console.log('Primary'); break;\n  case 'green': console.log('Secondary');\n  default: console.log('Unknown');\n}",
    "o": [
      "Primary",
      "Primary\nUnknown",
      "Secondary\nUnknown",
      "Unknown"
    ]
  },
  {
    "q": "What is the key difference between for...in and for...of loops?",
    "o": [
      "for...in iterates over properties, for...of iterates over values",
      "for...in is faster than for...of",
      "for...of works with objects but for...in doesn't",
      "for...in can't use break statements"
    ]
  },
  {
    "q": "What is the output of the following loop with a nested conditional?",
    "l": "javascript",
    "c": "let str = '';\nfor (let i = 0; i < 6; i += 2) {\n  if (i % 3 === 0) {\n    str += 'A';\n  } else {\n    str += 'B';\n  }\n}\nconsole.log(str);",
    "o": [
      "BAB",
      "AAB",
      "BBB",
      "BBA"
    ]
  },
  {
    "q": "Which loop structure would be best for repeatedly asking for user input until it's valid?",
    "o": [
      "do...while",
      "for",
      "while",
      "for...of"
    ]
  },
  {
    "q": "What is the output of the following code with a labeled break?",
    "l": "javascript",
    "c": "outerLoop: for (let i = 1; i <= 2; i++) {\n  innerLoop: for (let j = 1; j <= 3; j++) {\n    if (i === 2 && j === 2) break outerLoop;\n    console.log(i, j);\n  }\n}",
    "o": [
      "1 1, 1 2, 1 3, 2 1",
      "1 1, 1 2, 1 3, 2 1, 2 2",
      "1 1, 2 1",
      "1 1, 1 2, 2 1, 2 2"
    ]
  },
  {
    "q": "Which of these is NOT a valid use of a switch statement?",
    "o": [
      "switch (x > 5) { case true: /* code */ }",
      "switch (x) { case 1: /* code */ }",
      "switch (typeof x) { case 'string': /* code */ }",
      "switch (x) { case y: /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following complex conditional?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (!(a > b && b < 4) || a === 5) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which statement about loop optimizations is true?",
    "o": [
      "Cache array length when looping through arrays",
      "while loops are always faster than for loops",
      "break statements slow down loop execution",
      "continue statements should never be used"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 10;\nwhile (x > 0) {\n  x -= 3;\n  if (x % 2 === 0) continue;\n  console.log(x);\n}",
    "o": [
      "7 1",
      "7 4 1",
      "10 7 4 1",
      "7 1 -2"
    ]
  },
  {
    "q": "Which of these correctly implements a check for leap year conditions?",
    "o": [
      "if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0)",
      "if (year % 4 === 0 || year % 100 !== 0 && year % 400 === 0)",
      "if (year % 400 === 0 && year % 100 === 0 || year % 4 === 0)",
      "if (year % 4 === 0 && year % 400 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let num = 15;\nswitch (true) {\n  case num < 10: console.log('Small'); break;\n  case num < 20: console.log('Medium'); break;\n  case num < 30: console.log('Large'); break;\n  default: console.log('X-Large');\n}",
    "o": [
      "Medium",
      "Small",
      "Large",
      "X-Large"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop over while when iterating arrays?",
    "o": [
      "Built-in counter variable and length control",
      "Better performance with large arrays",
      "Automatic type conversion of elements",
      "No need for explicit termination condition"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 0; i < 2; i++) {\n  for (let j = 0; j < 3; j++) {\n    if (j === 1) break;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "000110",
      "000120",
      "000111",
      "001101"
    ]
  },
  {
    "q": "Which loop variation would be most efficient for processing a linked list?",
    "o": [
      "while (node) { node = node.next; }",
      "for (let i = 0; i < list.length; i++)",
      "for (let item of list)",
      "do { } while (node !== null)"
    ]
  },
  {
    "q": "What is the output of the following code with complex conditions?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b ? b < a : a > 0) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case expression in a switch statement?",
    "o": [
      "case x > 5:",
      "case 5:",
      "case 'text':",
      "case someVariable:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with a conditional break?",
    "l": "javascript",
    "c": "let i = 10;\ndo {\n  i -= 3;\n  if (i < 5) break;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "7",
      "7 4",
      "10 7 4",
      "7 4 1"
    ]
  },
  {
    "q": "Which statement about loop performance is true for modern JavaScript engines?",
    "o": [
      "Pre-allocating array sizes can improve performance",
      "while loops are always slower than for loops",
      "break/continue statements significantly degrade performance",
      "for...in is faster than for...of for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let counter = 0;\nfor (let i = 1; i <= 3; i++) {\n  for (let j = 1; j <= i; j++) {\n    counter++;\n  }\n}\nconsole.log(counter);",
    "o": [
      "6",
      "3",
      "9",
      "1"
    ]
  },
  {
    "q": "Which of these correctly implements a FizzBuzz condition for numbers divisible by both 3 and 5?",
    "o": [
      "if (num % 3 === 0 && num % 5 === 0)",
      "if (num % 3 === 0 || num % 5 === 0)",
      "if (num % 15 === 0)",
      "if (num / 3 === 0 && num / 5 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with fall-through behavior?",
    "l": "javascript",
    "c": "let value = 2;\nswitch (value) {\n  case 1: console.log('One');\n  case 2: console.log('Two');\n  case 3: console.log('Three'); break;\n  default: console.log('Default');\n}",
    "o": [
      "Two\nThree",
      "Two",
      "One\nTwo\nThree",
      "Default"
    ]
  },
  {
    "q": "What is the key advantage of using a while loop instead of a for loop?",
    "o": [
      "Better for conditions where iteration count is unknown",
      "Faster execution speed",
      "Automatic counter incrementation",
      "Built-in length checking"
    ]
  },
  {
    "q": "What is the output of the following loop with a complex condition?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 5; i > 0 && i % 2 !== 0; i -= 2) {\n  output += i;\n}\nconsole.log(output);",
    "o": [
      "53",
      "531",
      "5",
      "51"
    ]
  },
  {
    "q": "Which of these is the correct way to write an infinite loop in JavaScript?",
    "o": [
      "while (true) { }",
      "for ( ; ; ) { }",
      "loop (true) { }",
      "Both 1 and 2"
    ]
  },
  {
    "q": "What is the output of the following code with nested conditionals?",
    "l": "javascript",
    "c": "let x = 10, y = 5;\nif (x > 5) {\n  if (y > 10) {\n    console.log('A');\n  } else if (y > 2) {\n    console.log('B');\n  }\n} else {\n  console.log('C');\n}",
    "o": [
      "B",
      "A",
      "C",
      "No output"
    ]
  },
  {
    "q": "Which statement about the do-while loop is NOT true?",
    "o": [
      "It always executes exactly once",
      "The condition is checked after the first iteration",
      "It can be used with break and continue",
      "It's faster than a regular while loop"
    ]
  },
  {
    "q": "What is the output of the following code with a labeled continue?",
    "l": "javascript",
    "c": "outer: for (let i = 0; i < 3; i++) {\n  inner: for (let j = 0; j < 3; j++) {\n    if (i === 1 && j === 1) continue outer;\n    console.log(i, j);\n  }\n}",
    "o": [
      "0 0, 0 1, 0 2, 1 0, 2 0, 2 1, 2 2",
      "0 0, 0 1, 0 2, 1 0, 1 1, 2 0, 2 1, 2 2",
      "0 0, 1 0, 2 0",
      "0 0, 0 1, 0 2, 1 0, 2 0"
    ]
  },
  {
    "q": "Which of these is a valid use of a switch statement with multiple conditions?",
    "o": [
      "switch (true) { case (x > 0 && y > 0): /* code */ }",
      "switch (x && y) { case 1: /* code */ }",
      "switch (x > y) { case true || false: /* code */ }",
      "switch (x, y) { case 1, 2: /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\ndo {\n  x++;\n  if (x % 2 === 0) continue;\n  console.log(x);\n} while (x < 5);",
    "o": [
      "1 3 5",
      "1 2 3 4 5",
      "2 4",
      "1 3"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is between 10 and 20 (exclusive)?",
    "o": [
      "if (num > 10 && num < 20)",
      "if (10 < num < 20)",
      "if (num > 10 || num < 20)",
      "if (num >= 10 && num <= 20)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple cases?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n  case 'banana':\n  case 'apple': console.log('Common fruit'); break;\n  case 'dragonfruit': console.log('Exotic fruit');\n  default: console.log('Unknown');\n}",
    "o": [
      "Common fruit",
      "Common fruit\nUnknown",
      "Exotic fruit\nUnknown",
      "Unknown"
    ]
  },
  {
    "q": "What is the key difference between break and continue in loops?",
    "o": [
      "break exits the loop, continue skips to next iteration",
      "continue exits the loop, break skips to next iteration",
      "Both exit the loop completely",
      "Both skip to the next iteration"
    ]
  },
  {
    "q": "What is the output of the following nested for loop?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i <= 2; i++) {\n  for (let j = 1; j <= i; j++) {\n    result += `${i}${j} `;\n  }\n}\nconsole.log(result);",
    "o": [
      "11 21 22 ",
      "11 12 21 22 ",
      "11 21 ",
      "11 12 21 "
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing each character in a string?",
    "o": [
      "for (let i = 0; i < str.length; i++)",
      "while (str.length > 0)",
      "do { } while (str !== '')",
      "for (let char in str)"
    ]
  },
  {
    "q": "What is the output of the following code with complex conditions?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b && !(b > a || a === 0)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case x > 5:",
      "case 5:",
      "case 'hello':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following while loop with a conditional break?",
    "l": "javascript",
    "c": "let i = 5;\nwhile (i > 0) {\n  i--;\n  if (i === 2) break;\n  console.log(i);\n}",
    "o": [
      "4 3",
      "4 3 2",
      "5 4 3",
      "4 3 2 1"
    ]
  },
  {
    "q": "Which statement about loop optimization is true?",
    "o": [
      "Reducing loop nesting can improve performance",
      "while loops are always faster than for loops",
      "break statements should never be used",
      "continue statements make loops slower"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 5;\nwhile (x--) {\n  if (x % 2 === 0) continue;\n  console.log(x);\n}",
    "o": [
      "3 1",
      "4 3 2 1 0",
      "5 3 1",
      "4 2 0"
    ]
  },
  {
    "q": "Which of these correctly implements a check for a prime number?",
    "o": [
      "if (num > 1 && [...Array(num).keys()].slice(2).every(i => num % i !== 0))",
      "if (num % 2 !== 0 || num === 2)",
      "if (num > 0 && ![...Array(num).keys()].some(i => num % i === 0))",
      "if (num > 1 && !Array(num).fill().some((_,i) => i>1 && num%i===0))"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let age = 25;\nswitch (true) {\n  case age < 13: console.log('Child'); break;\n  case age < 20: console.log('Teen'); break;\n  case age < 65: console.log('Adult'); break;\n  default: console.log('Senior');\n}",
    "o": [
      "Adult",
      "Teen",
      "Child",
      "Senior"
    ]
  },
  {
    "q": "What is the key advantage of using a for...of loop over a traditional for loop?",
    "o": [
      "Simpler syntax for iterating through iterables",
      "Better performance with arrays",
      "Automatic index tracking",
      "Works with non-iterable objects"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 1; i <= 3; i++) {\n  for (let j = 1; j <= i; j++) {\n    if (j === 2) continue;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "11 21 31 33",
      "11 21 22 31 32 33",
      "11 12 21 22 31 32",
      "11 21 31"
    ]
  },
  {
    "q": "Which loop variation would be most appropriate for processing a binary tree?",
    "o": [
      "while (currentNode) { /* traverse */ }",
      "for (let i = 0; i < tree.length; i++)",
      "for (let node of tree)",
      "do { /* traverse */ } while (currentNode)"
    ]
  },
  {
    "q": "What is the output of the following code with complex ternary operations?",
    "l": "javascript",
    "c": "let a = 7, b = 4;\nconsole.log(a > b ? b > 5 ? 'A' : 'B' : a < 3 ? 'C' : 'D');",
    "o": [
      "B",
      "A",
      "D",
      "C"
    ]
  },
  {
    "q": "Which of these is NOT a valid use of a switch statement?",
    "o": [
      "switch (x) { case x > 5: /* code */ }",
      "switch (typeof x) { case 'number': /* code */ }",
      "switch (x) { case 1: /* code */ }",
      "switch (true) { case x === y: /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following while loop with multiple conditions?",
    "l": "javascript",
    "c": "let x = 10, y = 5;\nwhile (x > 0 && y > 0) {\n  x -= 2;\n  y--;\n  console.log(x, y);\n}",
    "o": [
      "8 4\n6 3\n4 2\n2 1\n0 0",
      "8 4\n6 3\n4 2\n2 1",
      "10 5\n8 4\n6 3\n4 2\n2 1",
      "8 4\n6 3\n4 2"
    ]
  },
  {
    "q": "Which statement about loop performance in modern JavaScript engines is true?",
    "o": [
      "Pre-allocating arrays can significantly improve performance",
      "for loops are always faster than while loops",
      "break/continue statements should be avoided",
      "for...in is the fastest loop for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let count = 0;\nfor (let i = 0; i < 5; i++) {\n  if (i % 2 === 0) {\n    continue;\n  }\n  count += i;\n}\nconsole.log(count);",
    "o": [
      "4",
      "6",
      "10",
      "0"
    ]
  },
  {
    "q": "Which of these correctly implements a check for a palindrome number?",
    "o": [
      "if (num.toString() === num.toString().split('').reverse().join(''))",
      "if (num === reverse(num))",
      "if (num.split('').reverse().join('') === num)",
      "if (String(num) === reverse(String(num)))"
    ]
  },
  {
    "q": "What is the output of the following switch statement with fall-through cases?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n  case 'A': console.log('Excellent');\n  case 'B': console.log('Good');\n  case 'C': console.log('Average'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Good\nAverage",
      "Good",
      "Excellent\nGood\nAverage",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop over while when processing arrays?",
    "o": [
      "Built-in counter and length handling",
      "Better performance with large arrays",
      "Automatic type conversion",
      "No need for explicit termination"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i <= 3; i++) {\n  for (let j = 1; j <= i; j++) {\n    if (j === 2) break;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "11 21 31",
      "11 12 21 22 31 32",
      "11 21 31 32",
      "11 12 21 31"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a queue until empty?",
    "o": [
      "while (queue.length > 0)",
      "for (let i = 0; i < queue.length; i++)",
      "for (let item of queue)",
      "do { } while (queue)"
    ]
  },
  {
    "q": "What is the output of the following code with complex conditions?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b && (b < a || a === 0)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case x > 5:",
      "case 5:",
      "case 'test':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop?",
    "l": "javascript",
    "c": "let i = 3;\ndo {\n  i--;\n  if (i === 1) break;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "2",
      "2 1",
      "3 2",
      "3 2 1"
    ]
  },
  {
    "q": "Which statement about loop optimization is true?",
    "o": [
      "Caching array length can improve performance",
      "while loops are always faster than for",
      "break statements should be avoided",
      "for...in is fastest for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\nwhile (x < 5) {\n  x++;\n  if (x === 3) {\n    continue;\n  }\n  console.log(x);\n}",
    "o": [
      "1 2 4 5",
      "1 2 3 4 5",
      "2 4 5",
      "1 2 4"
    ]
  },
  {
    "q": "Which of these correctly implements a check for a perfect square number?",
    "o": [
      "if (Math.sqrt(num) % 1 === 0)",
      "if (num % Math.sqrt(num) === 0)",
      "if (Number.isInteger(num ** 0.5))",
      "if (num === Math.pow(Math.floor(Math.sqrt(num)), 2))"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple matches?",
    "l": "javascript",
    "c": "let value = 10;\nswitch (value) {\n  case 5: console.log('Five');\n  case 10: console.log('Ten');\n  case 15: console.log('Fifteen'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Ten\nFifteen",
      "Ten",
      "Five\nTen\nFifteen",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a for...in loop for object iteration?",
    "o": [
      "Simpler syntax for enumerating object properties",
      "Better performance than Object.keys()",
      "Automatic type conversion of values",
      "Built-in protection against prototype properties"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 2; j++) {\n    if (i === j) continue;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "01 10 12 20 21",
      "00 01 10 11 20 21",
      "01 10 12 21",
      "01 12 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a stack until empty?",
    "o": [
      "while (stack.length > 0)",
      "for (let i = 0; i < stack.length; i++)",
      "for (let item of stack)",
      "do { } while (stack)"
    ]
  },
  {
    "q": "What is the output of the following code with complex logical operators?",
    "l": "javascript",
    "c": "let a = 7, b = 4;\nif (a > 5 || b < 3 && a % 2 === 0) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid use of a switch statement?",
    "o": [
      "switch (x) { case x > 5: /* code */ }",
      "switch (typeof x) { case 'string': /* code */ }",
      "switch (x) { case 1: /* code */ }",
      "switch (true) { case x === y: /* code */ }"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with a conditional?",
    "l": "javascript",
    "c": "let i = 4;\ndo {\n  i--;\n  if (i === 2) continue;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "3 1 0",
      "3 2 1 0",
      "4 3 1 0",
      "3 1"
    ]
  },
  {
    "q": "Which statement about loop performance is true for modern JavaScript engines?",
    "o": [
      "Reducing function calls in loops can improve performance",
      "while loops are always slower than for loops",
      "break/continue statements significantly degrade performance",
      "for...in is the fastest loop for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 0; i < 5; i += 2) {\n  if (i === 2) break;\n  console.log(i);\n}",
    "o": [
      "0",
      "0 2",
      "0 2 4",
      "No output"
    ]
  },
  {
    "q": "Which of these correctly implements a check for an even number that's greater than 10?",
    "o": [
      "if (num > 10 && num % 2 === 0)",
      "if (num % 2 === 0 && > 10)",
      "if (num % 2 === 0 || num > 10)",
      "if (num > 10 || num % 2 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple case matches?",
    "l": "javascript",
    "c": "let color = 'red';\nswitch (color) {\n  case 'red':\n  case 'blue': console.log('Primary');\n  case 'green': console.log('Color'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Primary\nColor",
      "Primary",
      "Color",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a while loop over a for loop?",
    "o": [
      "More readable when termination condition is complex",
      "Faster execution speed",
      "Automatic counter incrementation",
      "Better for fixed-length iterations"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i < 4; i++) {\n  for (let j = 1; j <= i; j++) {\n    if (i === j) continue;\n    result += j;\n  }\n}",
    "o": [
      "12123",
      "112123",
      "123",
      "12123123"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a graph node's neighbors?",
    "o": [
      "for (let neighbor of node.neighbors)",
      "for (let i = 0; i < node.neighbors; i++)",
      "while (node.neighbors)",
      "do { } while (node.neighbors.length)"
    ]
  },
  {
    "q": "What is the output of the following code with complex ternary operations?",
    "l": "javascript",
    "c": "let x = 5, y = 3;\nconsole.log(x > y ? y > 2 ? 'A' : 'B' : x < 1 ? 'C' : 'D');",
    "o": [
      "A",
      "B",
      "D",
      "C"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case x + y:",
      "case 1:",
      "case 'test':",
      "case someVariable:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with a conditional break?",
    "l": "javascript",
    "c": "let i = 5;\ndo {\n  i -= 2;\n  if (i < 0) break;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "3 1",
      "3 1 -1",
      "5 3 1",
      "3 1 0"
    ]
  },
  {
    "q": "Which statement about loop performance optimization is true?",
    "o": [
      "Minimizing work inside loops improves performance",
      "while loops are always slower than for loops",
      "break statements should be avoided",
      "for...in is optimal for array iteration"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 1;\nwhile (x < 5) {\n  x++;\n  if (x === 3) continue;\n  console.log(x);\n}",
    "o": [
      "2 4 5",
      "2 3 4 5",
      "1 2 4 5",
      "2 4"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a multiple of 3 or 5 but not both?",
    "o": [
      "if ((num % 3 === 0 || num % 5 === 0) && !(num % 3 === 0 && num % 5 === 0))",
      "if (num % 3 === 0 ^ num % 5 === 0)",
      "if (num % 15 !== 0 && (num % 3 === 0 || num % 5 === 0))",
      "All of the above"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let score = 85;\nswitch (true) {\n  case score >= 90: console.log('A'); break;\n  case score >= 80: console.log('B');\n  case score >= 70: console.log('C'); break;\n  default: console.log('D');\n}",
    "o": [
      "B\nC",
      "B",
      "C",
      "D"
    ]
  },
  {
    "q": "What is the key advantage of using a for...of loop with arrays?",
    "o": [
      "Simpler syntax for direct element access",
      "Faster performance than traditional for loops",
      "Built-in index tracking",
      "Automatic type conversion"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 2; j++) {\n    if (i === j) break;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "10 20 21",
      "00 10 20 21",
      "10 20",
      "01 10 20 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a matrix row by row?",
    "o": [
      "for (let i = 0; i < matrix.length; i++)",
      "for (let row of matrix)",
      "while (matrix.length > 0)",
      "do { } while (matrix)"
    ]
  },
  {
    "q": "What is the output of the following code with complex logical operators?",
    "l": "javascript",
    "c": "let a = 6, b = 4;\nif (a > 5 && b < 5 || a % 2 === 0) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case label in a switch statement?",
    "o": [
      "case a && b:",
      "case 1:",
      "case 'text':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with a conditional?",
    "l": "javascript",
    "c": "let i = 3;\ndo {\n  console.log(i);\n  i--;\n} while (i > 0 && i % 2 === 1);",
    "o": [
      "3\n2",
      "3\n2\n1",
      "3",
      "3\n1"
    ]
  },
  {
    "q": "Which statement about loop optimization is true?",
    "o": [
      "Reducing scope chain lookups improves performance",
      "while loops are always slower than for loops",
      "break statements should be avoided",
      "for...in is optimal for array iteration"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\ndo {\n  x += 2;\n  if (x === 4) continue;\n  console.log(x);\n} while (x < 6);",
    "o": [
      "2 6",
      "2 4 6",
      "2 6 8",
      "2 4"
    ]
  },
  {
    "q": "Which of these correctly checks if a year is a leap year?",
    "o": [
      "if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0)",
      "if (year % 4 === 0 || year % 100 === 0 && year % 400 === 0)",
      "if (year % 400 === 0 && year % 100 === 0 || year % 4 === 0)",
      "if (year % 4 === 0 && year % 400 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple case matches?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n  case 'banana':\n  case 'apple': console.log('Common');\n  case 'kiwi': console.log('Fruit'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Common\nFruit",
      "Common",
      "Fruit",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop over while when processing arrays?",
    "o": [
      "Built-in counter and length control",
      "Better performance with large arrays",
      "Automatic type conversion",
      "No need for explicit termination"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i <= 3; i++) {\n  for (let j = 1; j <= i; j++) {\n    if (j === 2) continue;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "11 21 31 33",
      "11 21 22 31 32 33",
      "11 12 21 22 31 32",
      "11 21 31"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a queue until empty?",
    "o": [
      "while (queue.length > 0)",
      "for (let i = 0; i < queue.length; i++)",
      "for (let item of queue)",
      "do { } while (queue)"
    ]
  },
  {
    "q": "What is the output of the following code with complex conditions?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b ? b < a : a > 0) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case x > 5:",
      "case 5:",
      "case 'text':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with a conditional break?",
    "l": "javascript",
    "c": "let i = 10;\ndo {\n  i -= 3;\n  if (i < 5) break;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "7",
      "7 4",
      "10 7 4",
      "7 4 1"
    ]
  },
  {
    "q": "Which statement about loop performance is true for modern JavaScript engines?",
    "o": [
      "Pre-allocating array sizes can improve performance",
      "while loops are always slower than for loops",
      "break/continue statements significantly degrade performance",
      "for...in is faster than for...of for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n  if (i % 3 === 0) continue;\n  console.log(i);\n}",
    "o": [
      "1 2 4 5",
      "1 2 3 4 5",
      "3",
      "1 2 4"
    ]
  },
  {
    "q": "Which of these correctly implements a check for a positive even number less than 100?",
    "o": [
      "if (num > 0 && num < 100 && num % 2 === 0)",
      "if (num % 2 === 0 && num > 0 && num < 100)",
      "if (0 < num < 100 && num % 2 === 0)",
      "Both 1 and 2"
    ]
  },
  {
    "q": "What is the output of the following switch statement with fall-through?",
    "l": "javascript",
    "c": "let day = 3;\nswitch (day) {\n  case 1: console.log('Mon');\n  case 2: console.log('Tue');\n  case 3: console.log('Wed');\n  default: console.log('Weekday');\n}",
    "o": [
      "Wed\nWeekday",
      "Wed",
      "Mon\nTue\nWed\nWeekday",
      "Weekday"
    ]
  },
  {
    "q": "What is the key difference between while and do-while loops?",
    "o": [
      "do-while executes at least once",
      "while loops are always faster",
      "do-while can't use break statements",
      "while loops require an incrementer"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 1; i <= 2; i++) {\n  for (let j = 1; j <= i; j++) {\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "11212",
      "111221",
      "1212",
      "112122"
    ]
  },
  {
    "q": "Which loop would be most appropriate for validating user input until correct?",
    "o": [
      "do-while",
      "for",
      "while",
      "for...of"
    ]
  },
  {
    "q": "What is the output of the following code with logical operators?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b && !(b > a || a === 0)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case x > 5:",
      "case 5:",
      "case 'hello':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following while loop with break?",
    "l": "javascript",
    "c": "let i = 5;\nwhile (i > 0) {\n  i--;\n  if (i === 2) break;\n  console.log(i);\n}",
    "o": [
      "4 3",
      "4 3 2",
      "5 4 3",
      "4 3 2 1"
    ]
  },
  {
    "q": "Which statement about loop performance is true?",
    "o": [
      "Caching array length improves performance",
      "while loops are always slower than for",
      "break/continue should be avoided",
      "for...in is fastest for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 4) {\n  i++;\n  if (i % 2 === 0) {\n    continue;\n  }\n  console.log(i);\n}",
    "o": [
      "1 3",
      "1 2 3",
      "2 4",
      "1 3 4"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is between 5 and 10 (inclusive)?",
    "o": [
      "if (num >= 5 && num <= 10)",
      "if (5 <= num <= 10)",
      "if (num > 5 && num < 10)",
      "if (num >= 5 || num <= 10)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple cases?",
    "l": "javascript",
    "c": "let day = 'Tuesday';\nswitch (day) {\n  case 'Monday':\n  case 'Tuesday': console.log('Weekday');\n  case 'Saturday': console.log('Weekend'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Weekday\nWeekend",
      "Weekday",
      "Weekend",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop instead of while when processing arrays?",
    "o": [
      "Built-in counter and termination condition",
      "Better performance with large arrays",
      "Automatic type conversion",
      "No need for explicit increment"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 0; i < 2; i++) {\n  for (let j = 0; j < 3; j++) {\n    if (j === 1) continue;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "000210",
      "000211",
      "000201",
      "000120"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a linked list?",
    "o": [
      "while (node) { node = node.next; }",
      "for (let i = 0; i < list.length; i++)",
      "for (let item of list)",
      "do { } while (node !== null)"
    ]
  },
  {
    "q": "What is the output of the following code with complex conditions?",
    "l": "javascript",
    "c": "let a = 4, b = 2;\nif (a > b && (b < a || a === 0)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case a > b:",
      "case 1:",
      "case 'test':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop?",
    "l": "javascript",
    "c": "let i = 3;\ndo {\n  console.log(i);\n  i--;\n} while (i > 0 && i % 2 === 1);",
    "o": [
      "3\n2",
      "3\n2\n1",
      "3",
      "3\n1"
    ]
  },
  {
    "q": "Which statement about loop optimization is true?",
    "o": [
      "Minimizing work inside loops improves performance",
      "while loops are always slower than for loops",
      "break statements should be avoided",
      "for...in is optimal for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n  if (i === 3) {\n    break;\n  }\n  console.log(i);\n}",
    "o": [
      "1 2",
      "1 2 3",
      "1 2 3 4 5",
      "3 4 5"
    ]
  },
  {
    "q": "Which of these correctly implements a check for a number that's either negative or between 10 and 20 (exclusive)?",
    "o": [
      "if (num < 0 || (num > 10 && num < 20))",
      "if (num < 0 && num > 10 && num < 20)",
      "if (num < 0 || num > 10 || num < 20)",
      "if (num < 0 || num > 10 && num < 20)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let score = 75;\nswitch (true) {\n  case score >= 90: console.log('A'); break;\n  case score >= 80: console.log('B');\n  case score >= 70: console.log('C'); break;\n  default: console.log('D');\n}",
    "o": [
      "C",
      "B\nC",
      "D",
      "A"
    ]
  },
  {
    "q": "What is the key advantage of using a for...of loop with strings?",
    "o": [
      "Directly iterates over each character",
      "Faster performance than traditional for loops",
      "Built-in index tracking",
      "Automatic type conversion"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 2; j++) {\n    if (i === j) continue;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "01 10 12 20 21",
      "00 01 10 11 20 21",
      "01 10 12 21",
      "01 12 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a binary tree in-order traversal?",
    "o": [
      "Recursive function with left/right calls",
      "for (let i = 0; i < tree.length; i++)",
      "while (tree !== null)",
      "for (let node of tree)"
    ]
  },
  {
    "q": "What is the output of the following code with complex logical operators?",
    "l": "javascript",
    "c": "let a = 6, b = 4;\nif (a > 5 && b < 5 || a % 2 === 0) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case label in a switch statement?",
    "o": [
      "case a + b:",
      "case 1:",
      "case 'text':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with multiple conditions?",
    "l": "javascript",
    "c": "let i = 4;\ndo {\n  console.log(i);\n  i--;\n} while (i > 0 && i % 2 === 0);",
    "o": [
      "4\n2",
      "4\n3\n2\n1",
      "4",
      "4\n2\n0"
    ]
  },
  {
    "q": "Which statement about loop optimization is true for modern JavaScript engines?",
    "o": [
      "Reducing function calls in loops improves performance",
      "while loops are always slower than for loops",
      "break/continue statements significantly degrade performance",
      "for...in is the fastest loop for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\nwhile (x < 5) {\n  x++;\n  if (x % 2 === 0) {\n    continue;\n  }\n  console.log(x);\n}",
    "o": [
      "1 3 5",
      "1 2 3 4 5",
      "2 4",
      "1 3"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a positive multiple of 7?",
    "o": [
      "if (num > 0 && num % 7 === 0)",
      "if (num % 7 === 0 && num > 0)",
      "if (num / 7 > 0 && Number.isInteger(num / 7))",
      "All of the above"
    ]
  },
  {
    "q": "What is the output of the following switch statement with fall-through?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n  case 'A': console.log('Excellent');\n  case 'B': console.log('Good');\n  case 'C': console.log('Average'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Good\nAverage",
      "Good",
      "Excellent\nGood\nAverage",
      "Unknown"
    ]
  },
  {
    "q": "What is the key difference between for and for...of loops?",
    "o": [
      "for...of directly iterates values without index",
      "for loops are always faster",
      "for...of can't use break/continue",
      "for loops can't iterate arrays"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 1; i <= 2; i++) {\n  for (let j = 1; j <= i; j++) {\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "11212",
      "111221",
      "1212",
      "112122"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a stack until empty?",
    "o": [
      "while (stack.length > 0)",
      "for (let i = 0; i < stack.length; i++)",
      "for (let item of stack)",
      "do { } while (stack)"
    ]
  },
  {
    "q": "What is the output of the following code with ternary operators?",
    "l": "javascript",
    "c": "let a = 4, b = 2;\nconsole.log(a > b ? b > 1 ? 'A' : 'B' : a < 0 ? 'C' : 'D');",
    "o": [
      "A",
      "B",
      "D",
      "C"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case a + b > 10:",
      "case 5:",
      "case 'text':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with break?",
    "l": "javascript",
    "c": "let i = 5;\ndo {\n  i -= 2;\n  if (i < 0) break;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "3 1",
      "3 1 -1",
      "5 3 1",
      "3 1 0"
    ]
  },
  {
    "q": "Which statement about loop performance is true?",
    "o": [
      "Reducing calculations in loops improves performance",
      "while loops are always slower than for",
      "break/continue should be avoided",
      "for...in is fastest for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let count = 0;\nfor (let i = 1; i <= 5; i++) {\n  if (i % 2 === 0) {\n    continue;\n  }\n  count += i;\n}\nconsole.log(count);",
    "o": [
      "9",
      "6",
      "15",
      "4"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a power of 2?",
    "o": [
      "if (num > 0 && (num & (num - 1)) === 0)",
      "if (num % 2 === 0)",
      "if (Math.log2(num) % 1 === 0)",
      "if (num / 2 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let temp = 25;\nswitch (true) {\n  case temp < 0: console.log('Freezing'); break;\n  case temp < 20: console.log('Cool'); break;\n  case temp < 30: console.log('Warm');\n  default: console.log('Hot');\n}",
    "o": [
      "Warm\nHot",
      "Warm",
      "Hot",
      "Cool"
    ]
  },
  {
    "q": "What is the key advantage of using a for...in loop for object iteration?",
    "o": [
      "Simpler syntax for enumerating properties",
      "Faster than Object.keys()",
      "Includes only own properties",
      "Works better with arrays"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 2; j++) {\n    if (i === j) break;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "10 20 21",
      "00 10 20 21",
      "10 20",
      "01 10 20 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a matrix diagonally?",
    "o": [
      "Nested for loops with i+j condition",
      "Single for loop",
      "while loop with row counter",
      "for...of loop"
    ]
  },
  {
    "q": "What is the output of the following code with complex logical operators?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b && (b < a || a === 0)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "First",
      "Second",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case a > b:",
      "case 1:",
      "case 'test':",
      "case someVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with continue?",
    "l": "javascript",
    "c": "let i = 3;\ndo {\n  i--;\n  if (i === 1) continue;\n  console.log(i);\n} while (i > 0);",
    "o": [
      "2 0",
      "2 1 0",
      "3 2 0",
      "2"
    ]
  },
  {
    "q": "Which statement about loop optimization is true?",
    "o": [
      "Reducing scope chain lookups improves performance",
      "while loops are always slower than for",
      "break statements should be avoided",
      "for...in is fastest for arrays"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 0;\ndo {\n  x += 3;\n  if (x === 6) continue;\n  console.log(x);\n} while (x < 10);",
    "o": [
      "3 9 12",
      "3 6 9 12",
      "3 9",
      "6 9 12"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a Fibonacci number?",
    "o": [
      "if (isPerfectSquare(5 * num * num + 4) || isPerfectSquare(5 * num * num - 4))",
      "if (num === fib(num))",
      "if (num % 1.618 === 0)",
      "if (num === 0 || num === 1 || num === (num - 1) + (num - 2))"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple matches?",
    "l": "javascript",
    "c": "let browser = 'Edge';\nswitch (browser) {\n  case 'Chrome':\n  case 'Firefox':\n  case 'Edge': console.log('Modern');\n  case 'IE': console.log('Legacy'); break;\n  default: console.log('Unknown');\n}",
    "o": [
      "Modern\nLegacy",
      "Modern",
      "Legacy",
      "Unknown"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop over forEach with arrays?",
    "o": [
      "Ability to break/continue",
      "Better performance in all cases",
      "Simpler syntax",
      "Automatic type conversion"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 3; j++) {\n    if (i === j) continue;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "01 02 10 12 20 21",
      "00 01 02 10 11 12 20 21 22",
      "01 02 12 20 21",
      "01 10 12 20 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a graph with depth-first search?",
    "o": [
      "Recursive function with stack",
      "for loop with index",
      "while loop with queue",
      "for...of loop"
    ]
  },
  {
    "q": "What is the output of the following code with complex ternary operations?",
    "l": "javascript",
    "c": "let a = 7, b = 4;\nconsole.log(a > b ? b > 5 ? 'A' : a % 2 === 0 ? 'B' : 'C' : 'D');",
    "o": [
      "C",
      "A",
      "B",
      "D"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case new Date().getDay():",
      "case 1:",
      "case 'yes':",
      "case isTrue:"
    ]
  },
  {
    "q": "What is the output of the following while loop with multiple conditions?",
    "l": "javascript",
    "c": "let x = 8, y = 3;\nwhile (x > 0 && y > 0) {\n  x -= 3;\n  y--;\n  console.log(x, y);\n}",
    "o": [
      "5 2\n2 1\n-1 0",
      "5 2\n2 1",
      "8 3\n5 2\n2 1",
      "5 2\n2 1\n-1 0\n-4 -1"
    ]
  },
  {
    "q": "Which statement about loop unrolling is true?",
    "o": [
      "Can improve performance by reducing iterations",
      "Always makes code faster",
      "Only works with for loops",
      "Makes code more readable"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 5) {\n  i += 2;\n  if (i === 4) continue;\n  console.log(i);\n}",
    "o": [
      "2 6",
      "2 4 6",
      "2 6 8",
      "2 4"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a triangular number?",
    "o": [
      "if (Number.isInteger((Math.sqrt(8 * num + 1) - 1) / 2))",
      "if (num % 2 === 0 && num % 3 === 0)",
      "if (num === (n * (n + 1)) / 2 for some integer n)",
      "if (Math.sqrt(num) % 1 === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let age = 25;\nswitch (true) {\n  case age < 13: console.log('Child'); break;\n  case age < 20: console.log('Teen');\n  case age < 30: console.log('Young Adult'); break;\n  default: console.log('Adult');\n}",
    "o": [
      "Young Adult",
      "Teen\nYoung Adult",
      "Child",
      "Adult"
    ]
  },
  {
    "q": "What is the key advantage of using a for...of loop with NodeLists?",
    "o": [
      "Direct iteration without converting to array",
      "Faster performance than querySelectorAll",
      "Built-in index tracking",
      "Automatic DOM updates"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 1; i <= 3; i++) {\n  for (let j = 1; j <= i; j++) {\n    if (i + j === 4) break;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "11 21 22 31",
      "11 12 21 22 31 32",
      "11 21 31",
      "11 21 22 31 32"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a binary heap?",
    "o": [
      "while loop with heap property check",
      "for loop with index",
      "for...in loop",
      "do...while loop"
    ]
  },
  {
    "q": "What is the output of the following code with complex logical operators?",
    "l": "javascript",
    "c": "let a = 5, b = 3;\nif (a > b && (b < a || a === 0) && !(b === 3)) {\n  console.log('First');\n} else {\n  console.log('Second');\n}",
    "o": [
      "Second",
      "First",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case Math.random() > 0.5:",
      "case 1:",
      "case 'valid':",
      "case myVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with multiple conditions?",
    "l": "javascript",
    "c": "let x = 10, y = 2;\ndo {\n  x -= y;\n  y++;\n  console.log(x);\n} while (x > 0 && y < 5);",
    "o": [
      "8 5 1",
      "8 5 1 -4",
      "10 8 5 1",
      "8 5"
    ]
  },
  {
    "q": "Which statement about tail call optimization in loops is true?",
    "o": [
      "Can prevent stack overflow in recursive loops",
      "Makes all loops faster",
      "Only works with for loops",
      "Implemented in all JavaScript engines"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let x = 1;\nwhile (x < 10) {\n  x *= 2;\n  if (x === 4) continue;\n  console.log(x);\n}",
    "o": [
      "2 8 16",
      "2 4 8 16",
      "2 8",
      "1 2 4 8 16"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a Harshad number?",
    "o": [
      "if (num % String(num).split('').reduce((a,b) => a + +b, 0) === 0)",
      "if (num % num.toString().length === 0)",
      "if (num.toString().split('').every(d => num % d === 0))",
      "if (num % Math.sumDigits(num) === 0)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with multiple fall-through cases?",
    "l": "javascript",
    "c": "let browser = 'Safari';\nswitch (browser) {\n  case 'Chrome':\n  case 'Firefox': console.log('Modern'); break;\n  case 'Safari':\n  case 'Edge': console.log('Mixed');\n  default: console.log('Other');\n}",
    "o": [
      "Mixed\nOther",
      "Modern",
      "Mixed",
      "Other"
    ]
  },
  {
    "q": "What is the key advantage of using a for loop over Array.prototype.forEach()?",
    "o": [
      "Ability to break out of the loop early",
      "Better performance in all cases",
      "More concise syntax",
      "Automatic handling of sparse arrays"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let result = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 3; j++) {\n    if (i + j === 3) break;\n    result += `${i}${j}`;\n  }\n}",
    "o": [
      "000102101112",
      "000102101120",
      "00010210111220",
      "00010210112021"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a trie data structure?",
    "o": [
      "Recursive function with child nodes",
      "Simple for loop",
      "while loop with counter",
      "for...in loop"
    ]
  },
  {
    "q": "What is the output of the following code with nested ternary operations?",
    "l": "javascript",
    "c": "let a = 8, b = 4;\nconsole.log(a > b ? b > 2 ? 'A' : a % 3 === 0 ? 'B' : 'C' : 'D');",
    "o": [
      "A",
      "B",
      "C",
      "D"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case a && b:",
      "case 42:",
      "case 'valid':",
      "case myVariable:"
    ]
  },
  {
    "q": "What is the output of the following while loop with complex conditions?",
    "l": "javascript",
    "c": "let x = 12, y = 3;\nwhile (x > 0 && y > 0) {\n  x -= y;\n  y--;\n  console.log(x);\n}",
    "o": [
      "9 5 2",
      "9 5 2 -2",
      "12 9 5 2",
      "9 5"
    ]
  },
  {
    "q": "Which statement about loop invariant code motion is true?",
    "o": [
      "It moves constant expressions outside loops",
      "It always makes loops faster",
      "It only works with for loops",
      "It's not supported in JavaScript"
    ]
  },
  {
    "q": "What is the output of the following code snippet?",
    "l": "javascript",
    "c": "let count = 0;\nfor (let i = 1; i <= 5; i++) {\n  if (i % 3 === 0) break;\n  count += i;\n}\nconsole.log(count);",
    "o": [
      "3",
      "6",
      "9",
      "15"
    ]
  },
  {
    "q": "Which of these correctly checks if a number is a factorial of some integer?",
    "o": [
      "function isFactorial(n) { let i = 1; while (n > 1) n /= ++i; return n === 1; }",
      "if (num === factorial(num))",
      "if (num % 1 === 0 && num % 2 === 0)",
      "if (Math.gamma(num + 1) === num)"
    ]
  },
  {
    "q": "What is the output of the following switch statement with expression cases?",
    "l": "javascript",
    "c": "let temp = -5;\nswitch (true) {\n  case temp < 0: console.log('Freezing');\n  case temp < 10: console.log('Cold'); break;\n  case temp < 20: console.log('Cool');\n  default: console.log('Warm');\n}",
    "o": [
      "Freezing\nCold",
      "Freezing",
      "Cold",
      "Freezing\nCold\nCool\nWarm"
    ]
  },
  {
    "q": "What is the key advantage of using a for...of loop with Set objects?",
    "o": [
      "Direct iteration over unique values",
      "Faster performance than forEach",
      "Built-in index tracking",
      "Automatic type conversion"
    ]
  },
  {
    "q": "What is the output of the following nested loop structure?",
    "l": "javascript",
    "c": "let output = '';\nfor (let i = 0; i < 3; i++) {\n  for (let j = 0; j < 3; j++) {\n    if (j === i) continue;\n    output += `${i}${j}`;\n  }\n}",
    "o": [
      "01 02 10 12 20 21",
      "00 01 02 10 11 12 20 21 22",
      "01 02 12 20 21",
      "01 10 12 20 21"
    ]
  },
  {
    "q": "Which loop would be most appropriate for processing a circular buffer?",
    "o": [
      "while loop with modulo arithmetic",
      "for loop with index",
      "for...in loop",
      "do...while loop"
    ]
  },
  {
    "q": "What is the output of the following code with complex ternary operations?",
    "l": "javascript",
    "c": "let a = 6, b = 3;\nconsole.log(a > b ? b > 2 ? 'A' : a % 2 === 0 ? 'B' : 'C' : 'D');",
    "o": [
      "A",
      "B",
      "C",
      "D"
    ]
  },
  {
    "q": "Which of these is NOT a valid case in a switch statement?",
    "o": [
      "case a || b:",
      "case 1:",
      "case 'valid':",
      "case myVar:"
    ]
  },
  {
    "q": "What is the output of the following do-while loop with multiple conditions?",
    "l": "javascript",
    "c": "let x = 7, y = 2;\ndo {\n  x -= y;\n  y++;\n  console.log(x);\n} while (x > 0 && y < 5);",
    "o": [
      "5 2",
      "5 2 -2",
      "7 5 2",
      "5 2 -2 -7"
    ]
  },
  {
    "q": "Which statement about loop unrolling is true?",
    "o": [
      "Can improve performance by reducing loop overhead",
      "Always makes code faster",
      "Only works with for loops",
      "Makes code more readable"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 5) {\n    console.log(\"Greater than 5\");\n} else {\n    console.log(\"Less than or equal to 5\");\n}",
    "o": [
      "Greater than 5",
      "Less than or equal to 5",
      "Error",
      "undefined"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for an if-else statement in JavaScript?",
    "o": [
      "if (condition) { /* code */ } else { /* code */ }",
      "if condition then { /* code */ } else { /* code */ }",
      "if (condition) then { /* code */ } else { /* code */ }",
      "if { /* code */ } else { /* code */ }"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let day = 3;\nswitch (day) {\n    case 1:\n        console.log(\"Monday\");\n        break;\n    case 2:\n        console.log(\"Tuesday\");\n        break;\n    case 3:\n        console.log(\"Wednesday\");\n        break;\n    default:\n        console.log(\"Invalid day\");\n}",
    "o": [
      "Wednesday",
      "Monday",
      "Tuesday",
      "Invalid day"
    ]
  },
  {
    "q": "Which of the following statements about the switch-case structure in JavaScript is true?",
    "o": [
      "The 'break' statement is used to prevent fall-through behavior.",
      "The 'switch' statement only works with numbers.",
      "The 'default' case is mandatory.",
      "Multiple cases cannot share the same code block."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    console.log(i);\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "3\n2\n1"
    ]
  },
  {
    "q": "Which of the following is a valid JavaScript while loop?",
    "o": [
      "while (condition) { /* code */ }",
      "while condition { /* code */ }",
      "loop while (condition) { /* code */ }",
      "while { /* code */ }"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let i = 5;\ndo {\n    console.log(i);\n    i--;\n} while (i > 2);",
    "o": [
      "5\n4\n3",
      "5\n4\n3\n2",
      "5\n4\n3\n2\n1",
      "Error"
    ]
  },
  {
    "q": "Which statement is true about do-while loops in JavaScript?",
    "o": [
      "A do-while loop executes at least once, even if the condition is false.",
      "A do-while loop does not require a semicolon.",
      "A do-while loop is the same as a for loop.",
      "A do-while loop does not allow break statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let score = 85;\nif (score >= 90) {\n    console.log(\"A\");\n} else if (score >= 80) {\n    console.log(\"B\");\n} else {\n    console.log(\"C\");\n}",
    "o": [
      "B",
      "A",
      "C",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the if-else structure in JavaScript is correct?",
    "o": [
      "An if statement can exist without an else statement.",
      "An else statement must always be present.",
      "JavaScript does not support nested if statements.",
      "Curly braces are optional in an if-else block."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let num = 2;\nswitch (num) {\n    case 1:\n    case 2:\n        console.log(\"Small number\");\n        break;\n    case 3:\n        console.log(\"Medium number\");\n        break;\n    default:\n        console.log(\"Large number\");\n}",
    "o": [
      "Small number",
      "Medium number",
      "Large number",
      "Error"
    ]
  },
  {
    "q": "What is the purpose of the 'default' case in a switch statement?",
    "o": [
      "It provides a fallback case if no other cases match.",
      "It is required in every switch statement.",
      "It is executed before any case conditions are checked.",
      "It must always be the first case."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(count);\n    count++;\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "3\n2\n1"
    ]
  },
  {
    "q": "Which of the following statements about the for loop in JavaScript is true?",
    "o": [
      "The initialization, condition, and increment expressions are optional.",
      "A for loop must always include an increment expression.",
      "A for loop can only iterate over arrays.",
      "A for loop executes exactly 10 times unless specified otherwise."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let i = 10;\ndo {\n    console.log(i);\n    i -= 2;\n} while (i > 5);",
    "o": [
      "10\n8\n6",
      "10\n8\n6\n4",
      "10\n9\n8\n7\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about loops in JavaScript is false?",
    "o": [
      "A do-while loop always runs at least once.",
      "A for loop can be used to iterate over object properties directly.",
      "A while loop continues execution while the condition remains true.",
      "The break statement can be used to exit a loop early."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 5;\nif (x == \"5\") {\n    console.log(\"Equal\");\n} else {\n    console.log(\"Not Equal\");\n}",
    "o": [
      "Equal",
      "Not Equal",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following correctly describes the difference between '==' and '===' in JavaScript?",
    "o": [
      "'===' checks both value and type, while '==' only checks value.",
      "'==' checks both value and type, while '===' only checks value.",
      "Both '==' and '===' work the same way in JavaScript.",
      "'===' can only be used with numbers."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let a = 3, b = 5;\nlet result = a > b ? \"A is greater\" : \"B is greater\";\nconsole.log(result);",
    "o": [
      "B is greater",
      "A is greater",
      "undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a correct way to use the ternary operator in JavaScript?",
    "o": [
      "let result = (x > 10) ? \"High\" : \"Low\";",
      "let result = if (x > 10) ? \"High\" : \"Low\";",
      "let result = x > 10 : \"High\" ? \"Low\";",
      "let result = (x > 10) then \"High\" else \"Low\";"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let num = 7;\nswitch (num % 2) {\n    case 0:\n        console.log(\"Even\");\n        break;\n    case 1:\n        console.log(\"Odd\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Odd",
      "Even",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about switch statements in JavaScript?",
    "o": [
      "A switch statement can have multiple cases with the same code block.",
      "A switch statement must always include a default case.",
      "A switch statement can only be used with numbers.",
      "A switch statement does not support the break keyword."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "for (let i = 5; i > 0; i--) {\n    console.log(i);\n}",
    "o": [
      "5\n4\n3\n2\n1",
      "4\n3\n2\n1",
      "1\n2\n3\n4\n5",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about loops in JavaScript is correct?",
    "o": [
      "A for loop can be written without any condition, but it will run indefinitely.",
      "A while loop always runs at least once.",
      "A do-while loop runs only if the condition is initially true.",
      "A for loop cannot be used to iterate through arrays."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 10;\nif (x) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Truthy",
      "Falsy",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following values is considered falsy in JavaScript?",
    "o": [
      "0",
      "1",
      "'false'",
      "[]"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 3) {\n    console.log(i);\n    i += 2;\n}",
    "o": [
      "0\n2",
      "0\n1\n2",
      "1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following correctly describes how a while loop works in JavaScript?",
    "o": [
      "It runs as long as the condition evaluates to true.",
      "It executes exactly once, even if the condition is false.",
      "It always executes a fixed number of times.",
      "It must always have an increment statement inside."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let count = 0;\ndo {\n    console.log(\"Hello\");\n} while (count > 0);",
    "o": [
      "Hello",
      "No output",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid way to exit a loop in JavaScript?",
    "o": [
      "Using the 'break' statement.",
      "Using the 'exit' statement.",
      "Using the 'return' statement in any function.",
      "Using the 'stop' statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 5;\nswitch (x) {\n    case 5:\n        console.log(\"Five\");\n    case 6:\n        console.log(\"Six\");\n        break;\n    default:\n        console.log(\"Other\");\n}",
    "o": [
      "Five\nSix",
      "Five",
      "Six",
      "Other"
    ]
  },
  {
    "q": "Which of the following statements about switch-case in JavaScript is false?",
    "o": [
      "Each case should typically end with a 'break' statement.",
      "Multiple cases can execute if 'break' is omitted.",
      "A switch statement can compare values using '==='.",
      "A switch statement must always have a 'default' case."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let num = 10;\nif (num % 2 === 0) {\n    console.log(\"Even\");\n} else {\n    console.log(\"Odd\");\n}",
    "o": [
      "Even",
      "Odd",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements correctly explains the execution of an if-else statement in JavaScript?",
    "o": [
      "The 'if' block executes if the condition is true, otherwise the 'else' block executes.",
      "The 'if' block always executes before the 'else' block, regardless of the condition.",
      "The 'else' block executes only if the 'if' block contains a return statement.",
      "The 'else' block is mandatory in every if-else statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case snippet?",
    "l": "javascript",
    "c": "let color = \"red\";\nswitch (color) {\n    case \"blue\":\n        console.log(\"Blue selected\");\n        break;\n    case \"red\":\n        console.log(\"Red selected\");\n    case \"green\":\n        console.log(\"Green selected\");\n        break;\n    default:\n        console.log(\"No color selected\");\n}",
    "o": [
      "Red selected\nGreen selected",
      "Red selected",
      "Green selected",
      "No color selected"
    ]
  },
  {
    "q": "Which of the following best describes a 'default' case in a JavaScript switch statement?",
    "o": [
      "It runs if none of the case conditions match.",
      "It must always be present in a switch statement.",
      "It runs only if the first case condition is false.",
      "It executes even if a matching case is found."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 6; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6",
      "2\n3\n4\n5\n6",
      "2\n4\n6\n8",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about JavaScript loops is correct?",
    "o": [
      "A for loop consists of initialization, condition, and increment/decrement.",
      "A while loop always runs a fixed number of times.",
      "A do-while loop runs only if the condition is true initially.",
      "A for loop cannot iterate through array elements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let count = 3;\ndo {\n    console.log(count);\n    count--;\n} while (count > 0);",
    "o": [
      "3\n2\n1",
      "2\n1",
      "3\n2",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to loop through an array in JavaScript?",
    "o": [
      "for (let i = 0; i < arr.length; i++)",
      "arr.forEach(item => console.log(item))",
      "while (item in arr)",
      "for (const item of arr)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let num = 7;\nif (num > 5) {\n    if (num < 10) {\n        console.log(\"Between 5 and 10\");\n    }\n} else {\n    console.log(\"Outside range\");\n}",
    "o": [
      "Between 5 and 10",
      "Outside range",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about nested if-else statements is true in JavaScript?",
    "o": [
      "An if statement can be placed inside another if statement.",
      "An if statement cannot contain another if statement inside it.",
      "Else statements must always be paired with an if statement outside a nested block.",
      "Nested if statements must have unique variable names inside each block."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case snippet?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Banana\");\n        break;\n    case \"apple\":\n        console.log(\"Apple\");\n    case \"grape\":\n        console.log(\"Grape\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Apple\nGrape",
      "Apple",
      "Grape",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following is a key difference between a for loop and a while loop in JavaScript?",
    "o": [
      "A for loop is typically used when the number of iterations is known beforehand, while a while loop is used when the number of iterations is unknown.",
      "A while loop always runs at least once, while a for loop does not.",
      "A for loop does not support condition checking, whereas a while loop does.",
      "A while loop cannot be used to iterate through an array."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 3; i++) {\n    for (let j = 1; j <= 2; j++) {\n        console.log(i, j);\n    }\n}",
    "o": [
      "1 1\n1 2\n2 1\n2 2\n3 1\n3 2",
      "1 1\n2 2\n3 3",
      "1 1\n1 2\n2 1\n3 1\n3 2",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops guarantees at least one execution in JavaScript?",
    "o": [
      "do-while loop",
      "for loop",
      "while loop",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 10;\nwhile (x > 0) {\n    console.log(x);\n    x -= 3;\n}",
    "o": [
      "10\n7\n4\n1",
      "10\n8\n6\n4\n2",
      "10\n9\n8\n7\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about break and continue is true?",
    "o": [
      "The 'break' statement exits the loop entirely, while 'continue' skips the current iteration and moves to the next one.",
      "The 'continue' statement exits the loop, while 'break' only pauses execution.",
      "Both 'break' and 'continue' always exit the loop.",
      "Neither 'break' nor 'continue' affect loop execution."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let score = 85;\nif (score >= 90) {\n    console.log(\"A\");\n} else if (score >= 80) {\n    console.log(\"B\");\n} else {\n    console.log(\"C\");\n}",
    "o": [
      "B",
      "A",
      "C",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following best describes the execution order of a switch statement when a case matches?",
    "o": [
      "Execution starts from the matching case and continues until a break statement is encountered.",
      "Only the matching case executes, and then execution stops.",
      "Execution starts from the matching case and continues to the default case, ignoring break statements.",
      "All cases are checked before executing any statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let i = 5;\nwhile (i > 0) {\n    console.log(i);\n    i -= 2;\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3\n2\n1",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about the JavaScript do-while loop?",
    "o": [
      "It guarantees at least one execution of the loop body.",
      "It does not execute if the condition is false initially.",
      "It cannot be used to iterate over an array.",
      "It must always be paired with an if statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript nested loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 2; i++) {\n    for (let j = 1; j <= 3; j++) {\n        console.log(i, j);\n    }\n}",
    "o": [
      "1 1\n1 2\n1 3\n2 1\n2 2\n2 3",
      "1 1\n2 1\n1 2\n2 2\n1 3\n2 3",
      "1 1\n1 2\n1 3\n2 1\n2 2",
      "Error"
    ]
  },
  {
    "q": "Which statement about the 'break' keyword in JavaScript loops is correct?",
    "o": [
      "It exits the loop immediately and continues with the next statement after the loop.",
      "It skips only the current iteration and continues looping.",
      "It only works inside while loops, not for loops.",
      "It stops execution of the entire script."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case snippet?",
    "l": "javascript",
    "c": "let day = 3;\nswitch (day) {\n    case 1:\n        console.log(\"Monday\");\n        break;\n    case 2:\n        console.log(\"Tuesday\");\n        break;\n    case 3:\n        console.log(\"Wednesday\");\n    case 4:\n        console.log(\"Thursday\");\n        break;\n    default:\n        console.log(\"Invalid day\");\n}",
    "o": [
      "Wednesday\nThursday",
      "Wednesday",
      "Thursday",
      "Invalid day"
    ]
  },
  {
    "q": "Which of the following is a valid JavaScript for loop syntax?",
    "o": [
      "for (let i = 0; i < 5; i++)",
      "for (i < 5; let i = 0; i++)",
      "for (let i = 0; i++)",
      "for i in range(5):"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let x = 3;\nif (x === \"3\") {\n    console.log(\"String\");\n} else {\n    console.log(\"Number\");\n}",
    "o": [
      "Number",
      "String",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the switch-case statement in JavaScript is correct?",
    "o": [
      "If no break statement is used, execution will continue to the next case.",
      "A switch-case statement must always have a default case.",
      "A case label can contain multiple values separated by a comma.",
      "Switch statements do not support string values as cases."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "0\n2\n4",
      "0\n1\n2\n3\n4",
      "0\n2\n4\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a valid loop structure in JavaScript?",
    "o": [
      "repeat-until",
      "for",
      "while",
      "do-while"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(\"Hello\");\n    count++;\n}",
    "o": [
      "Hello\nHello\nHello",
      "Hello\nHello",
      "Hello\nHello\nHello\nHello",
      "No output"
    ]
  },
  {
    "q": "Which of the following correctly explains the purpose of a do-while loop?",
    "o": [
      "It ensures that the loop body executes at least once before checking the condition.",
      "It is identical to a while loop, with no differences.",
      "It cannot contain a break statement.",
      "It is only used for iterating over arrays."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript nested loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n        console.log(i, j);\n    }\n}",
    "o": [
      "0 0\n0 1\n1 0\n1 1",
      "0 0\n1 1",
      "0 1\n1 0",
      "Error"
    ]
  },
  {
    "q": "Which statement about the 'continue' keyword in JavaScript is correct?",
    "o": [
      "It skips the current iteration and moves to the next iteration of the loop.",
      "It exits the loop immediately.",
      "It only works in while loops.",
      "It stops the entire execution of the script."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is true about the default case in a switch statement?",
    "o": [
      "It executes if no matching case is found.",
      "It must always be the last case in the switch statement.",
      "It is mandatory in every switch statement.",
      "It executes only if there is a break statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "let i = 1;\ndo {\n    console.log(i);\n    i *= 2;\n} while (i < 10);",
    "o": [
      "1\n2\n4\n8",
      "1\n3\n9",
      "1\n2\n4",
      "1\n2\n4\n8\n16"
    ]
  },
  {
    "q": "Which of the following is NOT a correct syntax for a JavaScript while loop?",
    "o": [
      "while x > 0 { console.log(x); x--; }",
      "while (x > 0) { console.log(x); x--; }",
      "while (x > 0)\n    console.log(x);",
      "while (true) { break; }"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 4; i++) {\n    if (i === 2) {\n        continue;\n    }\n    console.log(i);\n}",
    "o": [
      "0\n1\n3",
      "0\n1\n2\n3",
      "0\n1",
      "0\n1\n2"
    ]
  },
  {
    "q": "Which of the following describes the behavior of a break statement inside a loop?",
    "o": [
      "It immediately exits the loop and continues execution after the loop.",
      "It skips the current iteration and moves to the next iteration.",
      "It stops the script execution completely.",
      "It only works inside switch statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?",
    "l": "javascript",
    "c": "let count = 3;\nwhile (count) {\n    console.log(count);\n    count--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "Error",
      "Infinite loop"
    ]
  },
  {
    "q": "Which of the following is true about a for loop in JavaScript?",
    "o": [
      "It consists of initialization, condition, and increment/decrement.",
      "It does not support iterating over arrays.",
      "It cannot be used inside functions.",
      "It must always start with i = 0."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 10) {\n    console.log(\"Greater\");\n} else if (x >= 10) {\n    console.log(\"Equal or Greater\");\n} else {\n    console.log(\"Smaller\");\n}",
    "o": [
      "Equal or Greater",
      "Greater",
      "Smaller",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is a key characteristic of a switch-case statement in JavaScript?",
    "o": [
      "It uses strict comparison (===) to match cases.",
      "It supports case ranges like 'case 1-5:'.",
      "It requires a default case for execution.",
      "It cannot handle string values in cases."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "1\n3\n5",
      "1\n2\n3\n4\n5",
      "1\n2\n4",
      "1\n3"
    ]
  },
  {
    "q": "Which statement correctly explains the difference between while and do-while loops?",
    "o": [
      "A do-while loop always executes at least once before checking the condition.",
      "A while loop always executes at least once.",
      "A do-while loop requires an explicit break to stop execution.",
      "A while loop cannot handle infinite loops."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let num = 5;\nwhile (num > 0) {\n    console.log(num);\n    num -= 2;\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3\n1\n-1",
      "Infinite loop"
    ]
  },
  {
    "q": "Which of the following is NOT true about a break statement?",
    "o": [
      "It skips the rest of the loop and exits immediately.",
      "It can be used in both switch and loop statements.",
      "It moves execution to the next iteration of the loop.",
      "It stops execution inside the nearest enclosing loop."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let value = 'B';\nswitch (value) {\n    case 'A':\n        console.log(\"Apple\");\n        break;\n    case 'B':\n        console.log(\"Banana\");\n    case 'C':\n        console.log(\"Cherry\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Banana\nCherry",
      "Banana",
      "Cherry",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following loops is best suited for iterating over an array in JavaScript?",
    "o": [
      "forEach",
      "while",
      "do-while",
      "switch-case"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = 0;\nif (num) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Falsy",
      "Truthy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to write an if statement in JavaScript?",
    "o": [
      "if x > 5 console.log(\"Valid\");",
      "if (x > 5) console.log(\"Valid\");",
      "if (x > 5) { console.log(\"Valid\"); }",
      "if (x > 5) console.log(\"Valid\"); else console.log(\"Invalid\");"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 2; j++) {\n        console.log(i, j);\n    }\n}",
    "o": [
      "0 0\n0 1\n1 0\n1 1\n2 0\n2 1",
      "0 0\n1 1\n2 2",
      "0 1\n1 2\n2 3",
      "0 0\n0 1\n1 0\n2 1"
    ]
  },
  {
    "q": "Which of the following statements about the switch-case statement in JavaScript is true?",
    "o": [
      "If break is omitted, execution falls through to the next case.",
      "The default case must be placed at the beginning of the switch statement.",
      "Switch statements cannot evaluate expressions.",
      "Case labels must always be numbers."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript do-while loop?",
    "l": "javascript",
    "c": "let count = 3;\ndo {\n    console.log(count);\n    count--;\n} while (count > 3);",
    "o": [
      "3",
      "3\n2\n1",
      "3\n4",
      "No output"
    ]
  },
  {
    "q": "Which of the following correctly describes the behavior of a continue statement?",
    "o": [
      "It skips the current iteration and moves to the next iteration of the loop.",
      "It terminates the loop immediately.",
      "It exits the function where it is used.",
      "It only works inside if statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let i = 4;\nwhile (i) {\n    console.log(i);\n    i -= 2;\n}",
    "o": [
      "4\n2",
      "4\n3\n2\n1",
      "4\n2\n0",
      "4\n3\n2"
    ]
  },
  {
    "q": "Which loop is best suited for iterating over an object’s properties in JavaScript?",
    "o": [
      "for...in",
      "for...of",
      "while",
      "do-while"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let str = \"\";\nif (str) {\n    console.log(\"Not Empty\");\n} else {\n    console.log(\"Empty\");\n}",
    "o": [
      "Empty",
      "Not Empty",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following best describes the execution of a switch-case statement when a case matches?",
    "o": [
      "It executes the matching case and continues execution until a break is encountered.",
      "It only executes the matching case and stops immediately.",
      "It executes all cases, even if no match is found.",
      "It always executes the default case."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 8; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6\n8",
      "2\n3\n4\n5\n6\n7\n8",
      "2\n4\n6",
      "2\n4\n6\n8\n10"
    ]
  },
  {
    "q": "Which of the following correctly explains the behavior of a break statement inside a loop?",
    "o": [
      "It immediately exits the loop, skipping remaining iterations.",
      "It moves to the next iteration of the loop.",
      "It causes an infinite loop if used incorrectly.",
      "It is only allowed in for loops."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let n = 1;\nwhile (n < 4) {\n    console.log(n);\n    n++;\n}",
    "o": [
      "1\n2\n3",
      "1\n2\n3\n4",
      "1\n3",
      "1"
    ]
  },
  {
    "q": "Which statement about JavaScript loops is correct?",
    "o": [
      "A do-while loop always executes at least once before checking the condition.",
      "A for loop does not allow initialization inside its parentheses.",
      "A while loop executes a fixed number of times.",
      "JavaScript does not support nested loops."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let day = \"Monday\";\nswitch (day) {\n    case \"Monday\":\n        console.log(\"Start of week\");\n    case \"Tuesday\":\n        console.log(\"Second day\");\n        break;\n    default:\n        console.log(\"Other day\");\n}",
    "o": [
      "Start of week\nSecond day",
      "Start of week",
      "Start of week\nSecond day\nOther day",
      "Other day"
    ]
  },
  {
    "q": "Which of the following loops is best suited for iterating over an array’s elements while keeping track of the index?",
    "o": [
      "for loop",
      "forEach loop",
      "do-while loop",
      "switch-case statement"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let value = null;\nif (value) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Falsy",
      "Truthy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is true about the else-if ladder in JavaScript?",
    "o": [
      "It allows checking multiple conditions one after another.",
      "It executes all conditions even if one evaluates to true.",
      "It must always end with an else statement.",
      "It can only be used inside a switch statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 5; i > 0; i -= 2) {\n    console.log(i);\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3",
      "5\n3\n2\n1"
    ]
  },
  {
    "q": "Which of the following correctly describes the execution of a do-while loop?",
    "o": [
      "It executes the block at least once before checking the condition.",
      "It first checks the condition and then executes the block.",
      "It only runs if the condition is true initially.",
      "It does not allow incrementing variables inside the loop."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let count = 2;\nwhile (count < 6) {\n    console.log(count);\n    count += 2;\n}",
    "o": [
      "2\n4",
      "2\n4\n6",
      "2\n3\n4\n5",
      "2\n3\n4\n5\n6"
    ]
  },
  {
    "q": "Which of the following is a valid reason to use a switch-case instead of multiple if-else statements?",
    "o": [
      "When multiple cases depend on the same variable or expression.",
      "When different conditions are based on different variables.",
      "When checking complex boolean expressions.",
      "When the conditions involve mathematical calculations."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let num = 3;\nswitch (num) {\n    case 1:\n        console.log(\"One\");\n        break;\n    case 2:\n        console.log(\"Two\");\n        break;\n    case 3:\n    case 4:\n        console.log(\"Three or Four\");\n        break;\n    default:\n        console.log(\"Other number\");\n}",
    "o": [
      "Three or Four",
      "One",
      "Two",
      "Other number"
    ]
  },
  {
    "q": "Which loop should be used when you need to execute a block of code at least once, regardless of the condition?",
    "o": [
      "do-while loop",
      "for loop",
      "while loop",
      "switch-case"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = 10;\nif (num % 2 === 0 && num > 5) {\n    console.log(\"Valid\");\n} else {\n    console.log(\"Invalid\");\n}",
    "o": [
      "Valid",
      "Invalid",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to control flow in JavaScript?",
    "o": [
      "goto statement",
      "if-else statement",
      "switch-case statement",
      "for loop"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n    if (i === 3) break;\n    console.log(i);\n}",
    "o": [
      "1\n2",
      "1\n2\n3\n4\n5",
      "1\n2\n3",
      "3\n4\n5"
    ]
  },
  {
    "q": "Which of the following best describes the continue statement in JavaScript?",
    "o": [
      "It skips the current iteration and moves to the next iteration of the loop.",
      "It immediately exits the loop.",
      "It only works inside switch-case statements.",
      "It causes an infinite loop."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let x = 6;\nwhile (x > 2) {\n    console.log(x);\n    x -= 2;\n}",
    "o": [
      "6\n4",
      "6\n5\n4\n3",
      "6\n4\n2",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the default case in a switch statement is true?",
    "o": [
      "It is executed if no case matches the switch expression.",
      "It must always be the first case in a switch statement.",
      "It is required for a switch-case statement to work.",
      "It runs only when a case has a break statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Yellow\");\n        break;\n    case \"apple\":\n        console.log(\"Red\");\n    case \"cherry\":\n        console.log(\"Also Red\");\n        break;\n    default:\n        console.log(\"Unknown Color\");\n}",
    "o": [
      "Red\nAlso Red",
      "Red",
      "Also Red",
      "Unknown Color"
    ]
  },
  {
    "q": "Which loop is most suitable for executing code when the number of iterations is unknown beforehand?",
    "o": [
      "while loop",
      "for loop",
      "switch-case",
      "do-while loop"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num < 10) {\n    if (num % 2 === 0) {\n        console.log(\"Even and less than 10\");\n    } else {\n        console.log(\"Odd and less than 10\");\n    }\n} else {\n    console.log(\"Greater than or equal to 10\");\n}",
    "o": [
      "Odd and less than 10",
      "Even and less than 10",
      "Greater than or equal to 10",
      "Error"
    ]
  },
  {
    "q": "Which statement about nested if-else statements in JavaScript is correct?",
    "o": [
      "They allow multiple levels of conditional checking inside each other.",
      "They must always end with an else statement.",
      "They are only used inside switch-case structures.",
      "They must have only one if statement at the top level."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 2; j++) {\n        console.log(i, j);\n    }\n}",
    "o": [
      "0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1",
      "0 0\n1 0\n2 0\n3 0",
      "0 0\n0 1\n1 1\n2 1\n3 1",
      "0 1\n1 2\n2 3\n3 4"
    ]
  },
  {
    "q": "Which of the following best describes the break statement in JavaScript?",
    "o": [
      "It immediately exits the loop or switch statement.",
      "It skips the current iteration and continues to the next.",
      "It only works inside switch-case statements.",
      "It stops all execution of JavaScript code."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let count = 10;\nwhile (count >= 6) {\n    console.log(count);\n    count -= 2;\n}",
    "o": [
      "10\n8\n6",
      "10\n9\n8\n7\n6",
      "10\n8\n6\n4",
      "10\n8"
    ]
  },
  {
    "q": "Which of the following is true about the execution of a do-while loop?",
    "o": [
      "It executes at least once, even if the condition is false initially.",
      "It does not execute if the condition is false initially.",
      "It is the same as a while loop.",
      "It is used only inside switch-case structures."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n    case 'A':\n        console.log(\"Excellent\");\n        break;\n    case 'B':\n    case 'C':\n        console.log(\"Good\");\n        break;\n    default:\n        console.log(\"Needs Improvement\");\n}",
    "o": [
      "Good",
      "Excellent",
      "Needs Improvement",
      "Error"
    ]
  },
  {
    "q": "Which type of loop is best when you know exactly how many times you need to iterate?",
    "o": [
      "for loop",
      "while loop",
      "do-while loop",
      "switch-case"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let temperature = 30;\nif (temperature > 35) {\n    console.log(\"Hot\");\n} else if (temperature > 25) {\n    console.log(\"Warm\");\n} else {\n    console.log(\"Cold\");\n}",
    "o": [
      "Warm",
      "Hot",
      "Cold",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to write an if-else statement in JavaScript?",
    "o": [
      "if (x > 10) console.log(\"High\"); else console.log(\"Low\");",
      "if (x > 10) { console.log(\"High\"); } else { console.log(\"Low\"); }",
      "if (x > 10) console.log(\"High\") else console.log(\"Low\");",
      "if (x > 10) console.log(\"High\");"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 3; i >= 0; i--) {\n    console.log(i);\n}",
    "o": [
      "3\n2\n1\n0",
      "3\n2\n1",
      "3\n1\n0",
      "3\n2\n1\n0\n-1"
    ]
  },
  {
    "q": "Which statement about the for loop in JavaScript is correct?",
    "o": [
      "It can have an empty condition, making it run indefinitely.",
      "It always requires an initialization, condition, and increment.",
      "It only works with numeric values.",
      "It must always include a break statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let n = 5;\nwhile (n > 0) {\n    console.log(n);\n    n -= 2;\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3\n2\n1",
      "5\n3\n1\n-1"
    ]
  },
  {
    "q": "Which statement about the default case in a switch statement is FALSE?",
    "o": [
      "It is mandatory for a switch-case statement to execute.",
      "It executes if no matching case is found.",
      "It is typically placed at the end of a switch statement.",
      "It does not require a break statement to work correctly."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let day = 'Monday';\nswitch (day) {\n    case 'Monday':\n        console.log(\"Start of the week\");\n    case 'Tuesday':\n        console.log(\"Second day\");\n        break;\n    default:\n        console.log(\"Other day\");\n}",
    "o": [
      "Start of the week\nSecond day",
      "Start of the week",
      "Start of the week\nOther day",
      "Other day"
    ]
  },
  {
    "q": "Which loop executes at least once regardless of the condition?",
    "o": [
      "do-while loop",
      "while loop",
      "for loop",
      "switch-case"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let score = 80;\nif (score >= 90) {\n    console.log(\"A\");\n} else if (score >= 75) {\n    console.log(\"B\");\n} else if (score >= 60) {\n    console.log(\"C\");\n} else {\n    console.log(\"F\");\n}",
    "o": [
      "B",
      "A",
      "C",
      "F"
    ]
  },
  {
    "q": "Which of the following is TRUE about the if-else statement in JavaScript?",
    "o": [
      "The 'else' block is optional.",
      "Every if statement must have an 'else' block.",
      "Only one condition can be checked in an if-else structure.",
      "An if statement must always be followed by an else block."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 10; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6\n8\n10",
      "2\n3\n4\n5\n6\n7\n8\n9\n10",
      "2\n4\n6\n8",
      "2\n4\n6\n8\n10\n12"
    ]
  },
  {
    "q": "Which statement about the for loop is FALSE?",
    "o": [
      "The increment part of a for loop can be omitted.",
      "A for loop can have multiple initializations and conditions.",
      "The condition in a for loop is optional.",
      "A for loop must always include a break statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let x = 1;\nwhile (x < 5) {\n    console.log(x);\n    x++;\n}",
    "o": [
      "1\n2\n3\n4",
      "1\n2\n3\n4\n5",
      "1\n3\n5",
      "2\n4"
    ]
  },
  {
    "q": "What happens if the condition in a while loop is initially false?",
    "o": [
      "The loop does not execute at all.",
      "The loop executes once before stopping.",
      "An error occurs.",
      "The loop runs indefinitely."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n    case 'banana':\n        console.log(\"Yellow\");\n        break;\n    case 'apple':\n        console.log(\"Red\");\n    case 'grape':\n        console.log(\"Purple\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Red\nPurple",
      "Red",
      "Purple",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following correctly describes the break statement in JavaScript?",
    "o": [
      "It immediately exits the loop or switch statement.",
      "It skips to the next iteration of the loop.",
      "It pauses execution temporarily.",
      "It only works with switch-case statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the if-else structure is FALSE?",
    "o": [
      "An if statement can exist without an else block.",
      "Multiple else if conditions can be used between if and else.",
      "The else block executes only if all preceding conditions are false.",
      "An if-else structure must always include at least one else block."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i > 0; i -= 3) {\n    console.log(i);\n}",
    "o": [
      "10\n7\n4\n1",
      "10\n9\n8\n7\n6\n5\n4\n3\n2\n1",
      "10\n7\n4",
      "10\n7\n4\n-2"
    ]
  },
  {
    "q": "Which of the following is a valid way to create an infinite loop using a for loop?",
    "o": [
      "for(;;) {}",
      "for (let i = 0; i < Infinity; i++) {}",
      "for (let i = 0; i >= 0; i++) {}",
      "for (let i = 0; i < 10; i--) {}"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let count = 3;\ndo {\n    console.log(count);\n    count--;\n} while (count > 0);",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "2\n1",
      "3\n1"
    ]
  },
  {
    "q": "Which statement about a do-while loop is TRUE?",
    "o": [
      "The loop executes at least once, regardless of the condition.",
      "It runs only if the condition is initially true.",
      "It cannot be used with break statements.",
      "The condition is checked before the first iteration."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let letter = 'B';\nswitch (letter) {\n    case 'A':\n        console.log(\"Apple\");\n        break;\n    case 'B':\n        console.log(\"Banana\");\n    case 'C':\n        console.log(\"Cherry\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Banana\nCherry",
      "Banana",
      "Cherry",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following statements about the default case in a switch statement is TRUE?",
    "o": [
      "It executes when no matching case is found.",
      "It must always be the last case in a switch statement.",
      "It is required in every switch statement.",
      "It cannot contain a break statement."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let value = 0;\nif (value) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Falsy",
      "Truthy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following values evaluates to false in a JavaScript if condition?",
    "o": [
      "0",
      "\"false\"",
      "{}",
      "[]"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i *= 2) {\n    console.log(i);\n}",
    "o": [
      "1\n2\n4",
      "1\n2\n3\n4\n5",
      "1\n3\n5",
      "1\n2\n4\n8"
    ]
  },
  {
    "q": "Which statement about the for loop is TRUE?",
    "o": [
      "The loop can run infinitely if the condition is always true.",
      "A for loop must always have an increment expression.",
      "A for loop cannot contain a break statement.",
      "A for loop must always have three expressions inside the parentheses."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let n = 5;\nwhile (n > 0) {\n    console.log(n);\n    n -= 2;\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3\n1\n-1",
      "Error"
    ]
  },
  {
    "q": "Which statement about a while loop is FALSE?",
    "o": [
      "The condition is checked before executing the loop body.",
      "A while loop may not execute at all if the condition is false initially.",
      "A while loop must always contain a break statement.",
      "A while loop can be replaced with a for loop in many cases."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let day = 'Monday';\nswitch (day) {\n    case 'Sunday':\n        console.log(\"Weekend\");\n        break;\n    case 'Monday':\n    case 'Tuesday':\n        console.log(\"Weekday\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Weekday",
      "Weekend",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the switch statement is FALSE?",
    "o": [
      "A switch statement can handle multiple cases with the same logic.",
      "A break statement is necessary to prevent fall-through.",
      "A switch statement can only be used with numeric values.",
      "The default case executes if no matching case is found."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x == '10') {\n    console.log(\"Equal\");\n} else {\n    console.log(\"Not Equal\");\n}",
    "o": [
      "Equal",
      "Not Equal",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is the strict equality operator in JavaScript?",
    "o": [
      "===",
      "==",
      "=",
      "!=="
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 5; i > 0; i--) {\n    if (i === 3) break;\n    console.log(i);\n}",
    "o": [
      "5\n4",
      "5\n4\n3",
      "5\n4\n3\n2\n1",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements is TRUE about a break statement in a loop?",
    "o": [
      "It immediately exits the loop.",
      "It skips the current iteration and continues to the next one.",
      "It must always be used inside a switch statement.",
      "It cannot be used inside a loop."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 3) {\n    console.log(i);\n    i++;\n}",
    "o": [
      "0\n1\n2",
      "0\n1\n2\n3",
      "1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which statement about a do-while loop is FALSE?",
    "o": [
      "The loop always runs at least once.",
      "The condition is checked before executing the loop body.",
      "It is useful when the loop must execute at least once.",
      "A break statement can be used to exit the loop."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let num = 2;\nswitch (num) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n    case 3:\n        console.log(\"Three\");\n        break;\n    default:\n        console.log(\"Other\");\n}",
    "o": [
      "Two\nThree",
      "One\nTwo\nThree",
      "Two",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the switch statement is TRUE?",
    "o": [
      "If a break statement is omitted, execution falls through to the next case.",
      "A switch statement cannot handle multiple cases with the same output.",
      "A default case is required in every switch statement.",
      "A switch statement can only be used for numbers."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let y = null;\nif (y) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Falsy",
      "Truthy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following conditions will NOT execute the if block?",
    "o": [
      "if (\"\")",
      "if (\"false\")",
      "if (null)",
      "if (0)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 8; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6\n8",
      "2\n4\n6",
      "2\n3\n4\n5\n6\n7\n8",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid syntax for a JavaScript for loop?",
    "o": [
      "for (let i = 0; i < 5; i++)",
      "for (let i = 0; i < 5; i+)",
      "for let i = 0; i < 5; i++",
      "for (let i = 0, i < 5, i++)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let count = 3;\ndo {\n    console.log(count);\n    count--;\n} while (count > 0);",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "3\n2",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops ensures at least one execution of the loop body?",
    "o": [
      "do-while loop",
      "while loop",
      "for loop",
      "switch-case"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n    case 'A':\n        console.log(\"Excellent\");\n        break;\n    case 'B':\n        console.log(\"Good\");\n    case 'C':\n        console.log(\"Average\");\n        break;\n    default:\n        console.log(\"Fail\");\n}",
    "o": [
      "Good\nAverage",
      "Good",
      "Average",
      "Fail"
    ]
  },
  {
    "q": "Which statement about the switch-case default case is TRUE?",
    "o": [
      "It executes when no matching case is found.",
      "It must always be the last case.",
      "It is mandatory in every switch statement.",
      "It executes before any case statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Truthy",
      "Falsy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following values is considered truthy in JavaScript?",
    "o": [
      "\"false\"",
      "0",
      "null",
      "undefined"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "let i = 1;\nwhile (i <= 3) {\n    console.log(i);\n    i++;\n    if (i === 3) break;\n}",
    "o": [
      "1\n2",
      "1\n2\n3",
      "1",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about a for loop is TRUE?",
    "o": [
      "A for loop can have an empty condition and still run.",
      "A for loop must always have an increment or decrement.",
      "A for loop cannot have a break statement.",
      "A for loop is the only loop that can iterate over an array."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript do-while loop?",
    "l": "javascript",
    "c": "let x = 5;\ndo {\n    console.log(x);\n    x++;\n} while (x < 5);",
    "o": [
      "5",
      "No output",
      "5\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops will execute at least once regardless of the condition?",
    "o": [
      "do-while loop",
      "while loop",
      "for loop",
      "foreach loop"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let value = 1;\nswitch (value) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n        break;\n    case 3:\n        console.log(\"Three\");\n    default:\n        console.log(\"Other\");\n}",
    "o": [
      "One\nTwo",
      "One",
      "One\nTwo\nThree\nOther",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the switch-case structure is FALSE?",
    "o": [
      "A break statement is required after each case to prevent fall-through.",
      "Switch statements can compare both numbers and strings.",
      "A default case is executed only if no matching case is found.",
      "A case block cannot contain multiple statements."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let str = \"0\";\nif (str) {\n    console.log(\"Truthy\");\n} else {\n    console.log(\"Falsy\");\n}",
    "o": [
      "Truthy",
      "Falsy",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following will result in a falsy value in JavaScript?",
    "o": [
      "Boolean(\"\")",
      "Boolean(\" \")",
      "Boolean(\"0\")",
      "Boolean([])"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    if (i === 1) continue;\n    console.log(i);\n}",
    "o": [
      "0\n2",
      "0\n1\n2",
      "1\n2",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a correct way to declare an infinite loop in JavaScript?",
    "o": [
      "while (true) {}",
      "for (;;) {}",
      "do {} while (true);",
      "All of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript do-while loop?",
    "l": "javascript",
    "c": "let count = 0;\ndo {\n    console.log(count);\n    count++;\n} while (count < 0);",
    "o": [
      "0",
      "No output",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following statements about the break and continue keywords is TRUE?",
    "o": [
      "break exits the loop completely, while continue skips the current iteration.",
      "break and continue both stop the loop entirely.",
      "continue exits the loop, while break skips to the next iteration.",
      "break can only be used in a switch statement, not in loops."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let fruit = \"banana\";\nswitch (fruit) {\n    case \"apple\":\n        console.log(\"Apple\");\n        break;\n    case \"banana\":\n    case \"mango\":\n        console.log(\"Tropical fruit\");\n        break;\n    default:\n        console.log(\"Other\");\n}",
    "o": [
      "Tropical fruit",
      "Apple",
      "Other",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the default case in a switch statement is FALSE?",
    "o": [
      "It is mandatory in a switch statement.",
      "It executes when no case matches the value.",
      "It can appear anywhere in the switch statement, but it is usually placed at the end.",
      "It does not require a break statement, but it is recommended."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let value = null;\nif (value == undefined) {\n    console.log(\"Equal\");\n} else {\n    console.log(\"Not Equal\");\n}",
    "o": [
      "Equal",
      "Not Equal",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following will result in a truthy value in JavaScript?",
    "o": [
      "Boolean(\"false\")",
      "Boolean(0)",
      "Boolean(null)",
      "Boolean(NaN)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript loop?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 5) {\n    console.log(i);\n    if (i === 2) break;\n    i++;\n}",
    "o": [
      "0\n1\n2",
      "0\n1\n2\n3\n4",
      "0\n1",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about a do-while loop is TRUE?",
    "o": [
      "It executes the loop body at least once before checking the condition.",
      "It does not execute if the condition is false initially.",
      "It is identical to a while loop in behavior.",
      "It is only used for numeric iterations."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    console.log(i);\n    if (i === 1) break;\n}",
    "o": [
      "0\n1",
      "0\n1\n2",
      "1\n2",
      "Error"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for a for loop with multiple conditions?",
    "o": [
      "for (let i = 0, j = 5; i < j; i++, j--)",
      "for (let i = 0; let j = 5; i < j; i++, j--)",
      "for (let i = 0, j = 5 i < j i++, j--)",
      "for (i = 0, j = 5; i < j; i++, j--)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript switch-case statement?",
    "l": "javascript",
    "c": "let num = 2;\nswitch (num) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n    case 3:\n        console.log(\"Three\");\n        break;\n    default:\n        console.log(\"Other\");\n}",
    "o": [
      "Two\nThree",
      "Two",
      "One\nTwo\nThree",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid switch-case statement in JavaScript?",
    "o": [
      "switch (x) { case 1: console.log(\"One\"); break; default: console.log(\"Other\"); }",
      "switch x { case 1: console.log(\"One\"); break; default: console.log(\"Other\"); }",
      "switch (x) { case 1 console.log(\"One\"); break; default console.log(\"Other\"); }",
      "switch (x) { case 1 => console.log(\"One\"); break; default => console.log(\"Other\"); }"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = 10;\nif (num % 2 === 0)\n    console.log(\"Even\");\nelse\n    console.log(\"Odd\");",
    "o": [
      "Even",
      "Odd",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following correctly demonstrates a for loop in JavaScript?",
    "o": [
      "for (let i = 0; i < 5; i++) {}",
      "for (let i = 5; i >= 0; i--) {}",
      "for (;;) {}",
      "All of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript while loop?",
    "l": "javascript",
    "c": "let i = 0;\nwhile (i < 3) {\n    console.log(i);\n    i++;\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which statement about JavaScript switch-case is TRUE?",
    "o": [
      "Cases are evaluated using strict equality (===).",
      "You must always use a default case.",
      "A break statement is mandatory after every case.",
      "Switch-case cannot be used with strings."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let x = 5;\ndo {\n    console.log(x);\n    x--;\n} while (x > 7);",
    "o": [
      "5",
      "5\n4\n3\n2\n1",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops will execute at least once?",
    "o": [
      "do-while",
      "for",
      "while",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let value = 2;\nswitch (value) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n    case 3:\n        console.log(\"Three\");\n    default:\n        console.log(\"Default\");\n}",
    "o": [
      "Two\nThree\nDefault",
      "Two",
      "Two\nThree",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a valid use of break in JavaScript?",
    "o": [
      "Breaking out of a for loop",
      "Breaking out of a while loop",
      "Breaking out of an if statement",
      "Breaking out of a switch statement"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let a = 5, b = 10;\nif (a > b) {\n    console.log(\"A is greater\");\n} else if (a < b) {\n    console.log(\"B is greater\");\n} else {\n    console.log(\"Equal\");\n}",
    "o": [
      "B is greater",
      "A is greater",
      "Equal",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a correct way to write a while loop?",
    "o": [
      "while (condition) { /* code */ }",
      "while condition { /* code */ }",
      "loop while (condition) { /* code */ }",
      "while { /* code */ } (condition)"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript for loop?",
    "l": "javascript",
    "c": "for (let i = 3; i > 0; i--) {\n    console.log(i);\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a valid case in a JavaScript switch statement?",
    "o": [
      "case true:",
      "case \"string\":",
      "case > 5:",
      "case 10:"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript do-while loop?",
    "l": "javascript",
    "c": "let count = 0;\ndo {\n    console.log(count);\n    count += 2;\n} while (count < 5);",
    "o": [
      "0\n2\n4",
      "0\n2\n4\n6",
      "1\n3\n5",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about break and continue is TRUE?",
    "o": [
      "break exits the loop entirely, while continue skips the current iteration.",
      "continue exits the loop entirely, while break skips the current iteration.",
      "Both break and continue exit the loop.",
      "break and continue are only used in switch statements."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let color = \"red\";\nswitch (color) {\n    case \"blue\":\n        console.log(\"Blue selected\");\n        break;\n    case \"red\":\n        console.log(\"Red selected\");\n    case \"green\":\n        console.log(\"Green selected\");\n        break;\n    default:\n        console.log(\"No match\");\n}",
    "o": [
      "Red selected\nGreen selected",
      "Red selected",
      "Green selected",
      "No match"
    ]
  },
  {
    "q": "Which of the following will cause an infinite loop?",
    "o": [
      "while (true) { }",
      "for (let i = 0; i >= 0; i++) { }",
      "do { } while (1);",
      "All of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is TRUE about the switch-case statement in JavaScript?",
    "o": [
      "A switch statement compares values using strict equality (===).",
      "A break statement is optional but recommended in each case.",
      "A default case is mandatory in a switch statement.",
      "Switch statements only work with numbers."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i *= 2) {\n    console.log(i);\n}",
    "o": [
      "1\n2\n4",
      "1\n3\n5",
      "1\n2\n3\n4\n5",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid while loop?",
    "o": [
      "while (x > 0) { console.log(x); x--; }",
      "while { x > 0 } console.log(x); x--;",
      "while (x > 0): { console.log(x); x--; }",
      "while (x > 0) [ console.log(x); x--; ]"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript do-while loop?",
    "l": "javascript",
    "c": "let n = 10;\ndo {\n    console.log(n);\n    n -= 5;\n} while (n > 0);",
    "o": [
      "10\n5",
      "10\n5\n0",
      "5\n0",
      "Error"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for a JavaScript switch-case statement?",
    "o": [
      "switch (value) { case 1: console.log('One'); break; }",
      "switch value { case 1: console.log('One'); break; }",
      "switch (value) { case 1 => console.log('One'); }",
      "switch (value) ( case 1: console.log('One'); break; )"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let num = 3;\nswitch (num) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n    case 3:\n        console.log(\"Three\");\n        break;\n    default:\n        console.log(\"Default\");\n}",
    "o": [
      "Three",
      "Three\nDefault",
      "One\nTwo\nThree",
      "Error"
    ]
  },
  {
    "q": "Which of the following will result in an infinite loop?",
    "o": [
      "for (let i = 1; i > 0; i++) { console.log(i); }",
      "while (true) { console.log(\"Looping\"); }",
      "do { console.log(\"Running\"); } while (1);",
      "All of the above"
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 5;\nif (x === '5') {\n    console.log(\"Equal\");\n} else {\n    console.log(\"Not Equal\");\n}",
    "o": [
      "Not Equal",
      "Equal",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about JavaScript if-else is TRUE?",
    "o": [
      "The else block is optional in an if-else statement.",
      "An if statement must always be followed by an else block.",
      "JavaScript does not support nested if statements.",
      "An if statement can only check numeric values."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n    case 'banana':\n        console.log('Banana');\n    case 'apple':\n        console.log('Apple');\n    case 'mango':\n        console.log('Mango');\n        break;\n    default:\n        console.log('Unknown');\n}",
    "o": [
      "Apple\nMango",
      "Apple",
      "Banana\nApple\nMango",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following is TRUE about JavaScript switch-case?",
    "o": [
      "Without a break statement, execution continues to the next case.",
      "Each case must have a break statement.",
      "Switch statements only work with numbers and strings.",
      "The default case is required in every switch statement."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i >= 0; i -= 3) {\n    console.log(i);\n}",
    "o": [
      "10\n7\n4\n1",
      "10\n7\n4\n1\n-2",
      "10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops is guaranteed to execute at least once?",
    "o": [
      "do-while loop",
      "for loop",
      "while loop",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(count);\n    count++;\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "Infinite loop"
    ]
  },
  {
    "q": "Which of the following do-while loops is valid?",
    "o": [
      "do { console.log(\"Hello\"); } while (true);",
      "do console.log(\"Hello\"); while true;",
      "do { console.log(\"Hello\"); } while true;",
      "do (console.log(\"Hello\")) while (true);"
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = 8;\nif (num % 2 === 0) {\n    console.log(\"Even\");\n} else if (num % 2 !== 0) {\n    console.log(\"Odd\");\n} else {\n    console.log(\"Unknown\");\n}",
    "o": [
      "Even",
      "Odd",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about JavaScript if-else is FALSE?",
    "o": [
      "An if statement can exist without an else block.",
      "The condition inside an if statement must always be a boolean expression.",
      "You can nest if-else statements inside each other.",
      "An if-else statement must always have an else if condition."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let day = 'Monday';\nswitch (day) {\n    case 'Monday':\n    case 'Tuesday':\n        console.log('Weekday');\n        break;\n    case 'Saturday':\n    case 'Sunday':\n        console.log('Weekend');\n        break;\n    default:\n        console.log('Unknown');\n}",
    "o": [
      "Weekday",
      "Weekend",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "Which statement about JavaScript switch-case is FALSE?",
    "o": [
      "The case values must be of the same data type as the switch expression.",
      "A switch statement can handle different data types in different cases.",
      "The default case executes if no match is found.",
      "Break statements are necessary to prevent fall-through behavior."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n    if (i === 3) break;\n    console.log(i);\n}",
    "o": [
      "1\n2",
      "1\n2\n3\n4\n5",
      "1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following loop conditions will result in an infinite loop?",
    "o": [
      "while (true) { console.log(\"Running\"); }",
      "for (let i = 0; i < 10; i++) { console.log(i); }",
      "do { console.log(\"Hello\"); } while (false);",
      "while (i > 0) { console.log(i); i--; }"
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 5;\ndo {\n    console.log(count);\n    count--;\n} while (count > 2);",
    "o": [
      "5\n4\n3",
      "5\n4\n3\n2\n1",
      "4\n3\n2",
      "Infinite loop"
    ]
  },
  {
    "q": "Which of the following statements is TRUE about JavaScript loops?",
    "o": [
      "The for loop is generally used when the number of iterations is known beforehand.",
      "A while loop always executes at least once.",
      "A do-while loop does not guarantee execution even once.",
      "Break and continue statements cannot be used in loops."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 10) {\n    console.log(\"Greater than 10\");\n} else if (x === 10) {\n    console.log(\"Exactly 10\");\n} else {\n    console.log(\"Less than 10\");\n}",
    "o": [
      "Exactly 10",
      "Greater than 10",
      "Less than 10",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid way to write an if-else statement in JavaScript?",
    "o": [
      "if (condition) { /* code */ } else { /* code */ }",
      "if condition then { /* code */ } else { /* code */ }",
      "if { condition } { /* code */ } else { /* code */ }",
      "if condition { /* code */ } elseif { /* code */ }"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n    case 'banana':\n        console.log('Yellow');\n        break;\n    case 'apple':\n        console.log('Red');\n    case 'grape':\n        console.log('Purple');\n        break;\n    default:\n        console.log('Unknown');\n}",
    "o": [
      "Red\nPurple",
      "Red",
      "Yellow",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following is NOT true about switch-case in JavaScript?",
    "o": [
      "A switch statement can evaluate both numbers and strings.",
      "A case without a break statement will cause fall-through behavior.",
      "The default case is required in every switch statement.",
      "Multiple cases can share the same block of code."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 3; i++) {\n    for (let j = 1; j <= 2; j++) {\n        console.log(i * j);\n    }\n}",
    "o": [
      "1\n2\n2\n4\n3\n6",
      "1\n2\n3",
      "1\n2\n3\n4\n5\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following will result in an infinite loop?",
    "o": [
      "for (let i = 1; i > 0; i++) { console.log(i); }",
      "for (let i = 0; i < 5; i++) { console.log(i); }",
      "while (false) { console.log(\"Hello\"); }",
      "do { console.log(\"Hello\"); } while (false);"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let n = 3;\nwhile (n > 0) {\n    console.log(n);\n    n--;\n}",
    "o": [
      "3\n2\n1",
      "1\n2\n3",
      "3\n2\n1\n0",
      "Error"
    ]
  },
  {
    "q": "Which statement about loops in JavaScript is TRUE?",
    "o": [
      "A while loop executes as long as the condition remains true.",
      "A do-while loop will not execute if the condition is false at the start.",
      "A for loop does not support break or continue statements.",
      "A switch statement is an alternative to a loop."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num % 2 === 0) {\n    console.log(\"Even\");\n} else {\n    console.log(\"Odd\");\n}",
    "o": [
      "Odd",
      "Even",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about the if-else statement in JavaScript?",
    "o": [
      "An else block is optional in an if-else statement.",
      "The if block must always be followed by an else block.",
      "Multiple else blocks are allowed for a single if block.",
      "if statements must always include a condition inside double quotes."
    ]
  },
  {
    "q": "What will be the output of the following switch statement?",
    "l": "javascript",
    "c": "let day = 'Monday';\nswitch (day) {\n    case 'Monday':\n    case 'Tuesday':\n        console.log('Weekday');\n        break;\n    case 'Saturday':\n    case 'Sunday':\n        console.log('Weekend');\n        break;\n    default:\n        console.log('Invalid day');\n}",
    "o": [
      "Weekday",
      "Weekend",
      "Invalid day",
      "Monday"
    ]
  },
  {
    "q": "Which of the following is NOT a correct statement about switch-case in JavaScript?",
    "o": [
      "The case values must be of the same type as the switch expression.",
      "The break statement prevents fall-through between cases.",
      "A default case is mandatory in every switch statement.",
      "Multiple cases can execute the same block of code."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 5; i > 0; i--) {\n    console.log(i);\n}",
    "o": [
      "5\n4\n3\n2\n1",
      "1\n2\n3\n4\n5",
      "5\n4\n3\n2\n1\n0",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid way to declare a for loop in JavaScript?",
    "o": [
      "for (let i = 0; i < 5; i++) { console.log(i); }",
      "for i = 0 to 5 { console.log(i); }",
      "loop (i = 0; i < 5; i++) { console.log(i); }",
      "for (let i; i < 5; i++) { console.log(i); }"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(count);\n    count++;\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about do-while loops is correct?",
    "o": [
      "A do-while loop executes at least once, even if the condition is false.",
      "A do-while loop is identical to a while loop in execution.",
      "A do-while loop is used only for iterating over arrays.",
      "A do-while loop must include an explicit break statement to exit."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 5)\n    if (x < 15)\n        console.log(\"Inside range\");\n    else\n        console.log(\"Outside range\");",
    "o": [
      "Inside range",
      "Outside range",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is true for the else-if ladder?",
    "o": [
      "It allows checking multiple conditions sequentially.",
      "It can contain multiple else statements.",
      "All conditions in an else-if ladder are executed.",
      "The else-if ladder must end with an else block."
    ]
  },
  {
    "q": "What will be the output of the following switch statement?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n    case 'A':\n        console.log('Excellent');\n    case 'B':\n        console.log('Good');\n    case 'C':\n        console.log('Average');\n        break;\n    default:\n        console.log('Fail');\n}",
    "o": [
      "Good\nAverage",
      "Excellent\nGood\nAverage",
      "Good",
      "Fail"
    ]
  },
  {
    "q": "Which of the following is NOT true about the switch statement?",
    "o": [
      "It supports fall-through behavior when 'break' is omitted.",
      "It can only compare numbers, not strings.",
      "A 'default' case is executed if no case matches.",
      "It is useful when multiple conditions are checked against the same variable."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 6; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6",
      "2\n3\n4\n5\n6",
      "2\n4\n6\n8",
      "Error"
    ]
  },
  {
    "q": "Which of the following is NOT a correct way to initialize a for loop?",
    "o": [
      "for (let i = 0; i < 5; i++)",
      "for (let i = 0; i < 5; i += 2) { console.log(i); }",
      "for (;;) { console.log('Infinite loop'); }",
      "for (let i = 0, j = 5; i < j; i++) { console.log(i); }"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let n = 3;\nwhile (n > 0) {\n    console.log(n);\n    n--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "0\n1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let num = 5;\ndo {\n    console.log(num);\n    num++;\n} while (num < 8);",
    "o": [
      "5\n6\n7",
      "5\n6\n7\n8",
      "6\n7\n8",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a key difference between while and do-while loops?",
    "o": [
      "A do-while loop executes at least once, even if the condition is false.",
      "A while loop always executes at least once.",
      "A while loop does not require a condition to be valid.",
      "A do-while loop does not need a semicolon after the while condition."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num % 2 === 0)\n    console.log(\"Even\");\nelse\n    console.log(\"Odd\");",
    "o": [
      "Odd",
      "Even",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following correctly describes the working of an if-else statement?",
    "o": [
      "If the condition is true, the if block executes; otherwise, the else block executes.",
      "Both the if and else blocks execute regardless of the condition.",
      "If the condition is false, only the if block executes.",
      "An else block is mandatory in an if-else statement."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let value = '2';\nswitch (value) {\n    case 2:\n        console.log(\"Number 2\");\n        break;\n    case '2':\n        console.log(\"String 2\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "String 2",
      "Number 2",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the switch-case statement is true?",
    "o": [
      "The case values are compared using strict equality (===).",
      "The case values are compared using loose equality (==).",
      "A switch statement must always end with a default case.",
      "Switch statements can only handle numeric values."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i *= 2) {\n    console.log(i);\n}",
    "o": [
      "1\n2\n4",
      "1\n3\n5",
      "1\n2\n4\n8",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about for loops is incorrect?",
    "o": [
      "A for loop can have multiple initialization expressions.",
      "A for loop must have an increment statement.",
      "A for loop can be written without a condition.",
      "A for loop can include multiple update expressions."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 0;\nwhile (count < 3) {\n    console.log(count);\n    count++;\n}",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements is true about while loops?",
    "o": [
      "A while loop may not execute at all if the condition is false initially.",
      "A while loop always executes at least once.",
      "A while loop requires a predefined number of iterations.",
      "A while loop cannot be exited using the 'break' statement."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let x = 10;\ndo {\n    console.log(x);\n    x += 5;\n} while (x < 15);",
    "o": [
      "10",
      "10\n15",
      "10\n15\n20",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the do-while loop is correct?",
    "o": [
      "A do-while loop executes the body at least once before checking the condition.",
      "A do-while loop is identical to a while loop in execution.",
      "A do-while loop does not require a semicolon after the while condition.",
      "A do-while loop can be used without a condition."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 0;\nif (x) {\n    console.log(\"True\");\n} else {\n    console.log(\"False\");\n}",
    "o": [
      "False",
      "True",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following values will evaluate to false in an if condition?",
    "o": [
      "0",
      "1",
      "'false'",
      "[]"
    ]
  },
  {
    "q": "What will be the output of the following switch statement?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Banana\");\n        break;\n    case \"apple\":\n    case \"mango\":\n        console.log(\"Apple or Mango\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Apple or Mango",
      "Banana",
      "Unknown",
      "Error"
    ]
  },
  {
    "q": "What happens if a case in a switch statement does not include a break?",
    "o": [
      "Execution continues to the next case until a break is encountered.",
      "An error is thrown.",
      "Only the matched case executes and then the switch exits.",
      "The switch statement restarts from the beginning."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 5; i > 0; i--) {\n    if (i === 3) break;\n    console.log(i);\n}",
    "o": [
      "5\n4",
      "5\n4\n3\n2\n1",
      "5\n4\n3",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about for loops is true?",
    "o": [
      "The initialization, condition, and update can be omitted.",
      "A for loop must always include an increment or decrement statement.",
      "The loop body must always contain a statement.",
      "A for loop cannot be used to iterate over an array."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let num = 1;\nwhile (num < 10) {\n    console.log(num);\n    num *= 2;\n}",
    "o": [
      "1\n2\n4\n8",
      "1\n3\n6\n9",
      "1\n2\n4\n8\n16",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements is false about while loops?",
    "o": [
      "A while loop always runs at least once.",
      "A while loop executes as long as the condition remains true.",
      "A while loop can be terminated using the break statement.",
      "A while loop may never execute if the condition is false initially."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 5;\ndo {\n    console.log(count);\n    count -= 2;\n} while (count > 0);",
    "o": [
      "5\n3\n1",
      "5\n3\n1\n-1",
      "5\n4\n3\n2\n1",
      "Error"
    ]
  },
  {
    "q": "Which of the following best describes a do-while loop?",
    "o": [
      "A do-while loop always executes its body at least once.",
      "A do-while loop behaves exactly like a while loop.",
      "A do-while loop condition is checked before the first execution.",
      "A do-while loop cannot be used for infinite loops."
    ]
  },
  {
    "q": "What will be the output of the following nested if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num > 5) {\n    if (num % 2 === 0) {\n        console.log(\"Even and greater than 5\");\n    } else {\n        console.log(\"Odd and greater than 5\");\n    }\n} else {\n    console.log(\"5 or less\");\n}",
    "o": [
      "Odd and greater than 5",
      "Even and greater than 5",
      "5 or less",
      "Error"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for an if-else statement?",
    "o": [
      "if (condition) { /* code */ } else { /* code */ }",
      "if condition { /* code */ } else { /* code */ }",
      "if (condition) then { /* code */ } else { /* code */ }",
      "if { condition } { /* code */ } else { /* code */ }"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let value = 10;\nswitch (value) {\n    case 5:\n        console.log(\"Five\");\n    case 10:\n        console.log(\"Ten\");\n    case 15:\n        console.log(\"Fifteen\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Ten\nFifteen",
      "Ten",
      "Ten\nFifteen\nUnknown",
      "Unknown"
    ]
  },
  {
    "q": "What happens if a switch case does not match any case and no default case is provided?",
    "o": [
      "Nothing happens, the switch block is skipped.",
      "An error is thrown.",
      "The first case is executed by default.",
      "The last case is executed by default."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 10; i *= 2) {\n    console.log(i);\n}",
    "o": [
      "1\n2\n4\n8",
      "1\n3\n6\n9",
      "1\n2\n4\n8\n16",
      "Error"
    ]
  },
  {
    "q": "Which statement is true regarding the for loop?",
    "o": [
      "The initialization, condition, and increment can all be omitted.",
      "A for loop must have a numeric counter.",
      "A for loop must always increment the counter.",
      "A for loop cannot contain a break statement."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let i = 1;\nwhile (i < 3) {\n    console.log(i);\n    i++;\n}\nconsole.log(\"Done\");",
    "o": [
      "1\n2\nDone",
      "1\nDone",
      "1\n2\n3\nDone",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements is true about while loops?",
    "o": [
      "A while loop can run indefinitely if the condition never becomes false.",
      "A while loop must have an explicit counter.",
      "A while loop cannot be nested inside another loop.",
      "A while loop must execute at least once."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let x = 5;\ndo {\n    console.log(x);\n    x -= 3;\n} while (x > 0);",
    "o": [
      "5\n2",
      "5\n2\n-1",
      "5\n3\n1",
      "Error"
    ]
  },
  {
    "q": "Which statement about the do-while loop is false?",
    "o": [
      "A do-while loop may never execute if the condition is false initially.",
      "A do-while loop executes at least once before checking the condition.",
      "A do-while loop is useful when the loop body should run at least once.",
      "A do-while loop can be controlled using break and continue."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let a = 10, b = 5;\nif (a < b) {\n    console.log(\"a is smaller\");\n} else if (a === b) {\n    console.log(\"a and b are equal\");\n} else {\n    console.log(\"a is greater\");\n}",
    "o": [
      "a is greater",
      "a is smaller",
      "a and b are equal",
      "Error"
    ]
  },
  {
    "q": "Which of the following statements about the if-else structure is true?",
    "o": [
      "An if block can exist without an else block.",
      "An else block must always be included in an if statement.",
      "An if block cannot have more than one condition.",
      "An if statement cannot be nested inside another if statement."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let day = \"Monday\";\nswitch (day) {\n    case \"Monday\":\n        console.log(\"Start of the week\");\n    case \"Friday\":\n        console.log(\"Almost weekend\");\n        break;\n    default:\n        console.log(\"Regular day\");\n}",
    "o": [
      "Start of the week\nAlmost weekend",
      "Start of the week",
      "Almost weekend",
      "Regular day"
    ]
  },
  {
    "q": "Which of the following is NOT a valid switch-case rule in JavaScript?",
    "o": [
      "Cases must have a unique value.",
      "The break statement is optional but helps control flow.",
      "Default is mandatory in every switch statement.",
      "Cases can use any data type, not just numbers."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i >= 0; i -= 3) {\n    console.log(i);\n}",
    "o": [
      "10\n7\n4\n1",
      "10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0",
      "10\n7\n4\n1\n-2",
      "10\n8\n6\n4\n2\n0"
    ]
  },
  {
    "q": "Which statement is true regarding the for loop structure?",
    "o": [
      "The condition part of the loop determines whether the loop will continue.",
      "The increment part is mandatory in every for loop.",
      "A for loop must always run at least once.",
      "The initialization part cannot use the let keyword."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 3;\nwhile (count > 0) {\n    console.log(count);\n    count--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "3\n1",
      "Error"
    ]
  },
  {
    "q": "Which of the following best describes a while loop?",
    "o": [
      "It continues execution as long as the condition remains true.",
      "It runs a fixed number of times, always three times.",
      "It does not require a condition.",
      "It must always contain a break statement."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let num = 5;\ndo {\n    console.log(num);\n    num++;\n} while (num < 8);",
    "o": [
      "5\n6\n7",
      "5\n6\n7\n8",
      "5\n6",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a key difference between while and do-while loops?",
    "o": [
      "A do-while loop executes at least once before checking the condition.",
      "A while loop executes at least once before checking the condition.",
      "A do-while loop always runs infinitely.",
      "A while loop must contain an else statement."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 8;\nif (x % 2 === 0) {\n    console.log(\"Even number\");\n} else {\n    console.log(\"Odd number\");\n}",
    "o": [
      "Even number",
      "Odd number",
      "Undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about the if-else statement in JavaScript?",
    "o": [
      "Multiple if-else statements can be nested.",
      "An if statement must always have an else block.",
      "An if condition must always be a boolean expression.",
      "An else block executes when the if block contains a return statement."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let grade = 'B';\nswitch (grade) {\n    case 'A':\n        console.log('Excellent');\n        break;\n    case 'B':\n        console.log('Good');\n    case 'C':\n        console.log('Average');\n        break;\n    default:\n        console.log('Fail');\n}",
    "o": [
      "Good\nAverage",
      "Good",
      "Average",
      "Fail"
    ]
  },
  {
    "q": "Which of the following is a correct rule for a switch-case statement?",
    "o": [
      "The default case is optional.",
      "A break statement must be present in every case block.",
      "A case block cannot have multiple values.",
      "A switch statement cannot evaluate strings."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 10; i *= 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n8",
      "2\n4\n8\n16",
      "2\n3\n4\n5\n6\n7\n8\n9\n10",
      "2\n6\n10"
    ]
  },
  {
    "q": "Which statement about the for loop is correct?",
    "o": [
      "The increment part can contain any arithmetic operation.",
      "A for loop cannot be used to iterate over arrays.",
      "The initialization section cannot be left empty.",
      "A for loop must always have a break statement."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let i = 1;\nwhile (i < 5) {\n    console.log(i);\n    i += 2;\n}",
    "o": [
      "1\n3",
      "1\n2\n3\n4",
      "1\n3\n5",
      "1\n2\n4"
    ]
  },
  {
    "q": "Which of the following statements is true about while loops?",
    "o": [
      "A while loop may never execute if the condition is false initially.",
      "A while loop always runs at least once.",
      "A while loop does not require a condition.",
      "A while loop must contain a return statement."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 3;\ndo {\n    console.log(count);\n    count -= 2;\n} while (count > 0);",
    "o": [
      "3\n1",
      "3\n2\n1",
      "3\n1\n-1",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a correct characteristic of a do-while loop?",
    "o": [
      "The loop body executes at least once before checking the condition.",
      "A do-while loop always runs infinitely.",
      "The condition is checked before executing the loop body.",
      "A do-while loop cannot use break statements."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Undefined"
    ]
  },
  {
    "q": "Which statement about if-else is correct in JavaScript?",
    "o": [
      "An if block can exist without an else block.",
      "Every if statement must have an else block.",
      "An if statement cannot have more than one condition.",
      "The else block executes only if the condition in if is explicitly false."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let day = 3;\nswitch (day) {\n    case 1:\n        console.log(\"Monday\");\n        break;\n    case 2:\n        console.log(\"Tuesday\");\n        break;\n    case 3:\n    case 4:\n        console.log(\"Midweek\");\n        break;\n    default:\n        console.log(\"Weekend\");\n}",
    "o": [
      "Midweek",
      "Tuesday",
      "Monday",
      "Weekend"
    ]
  },
  {
    "q": "Which of the following is true about switch-case in JavaScript?",
    "o": [
      "Cases without a break statement will fall through.",
      "Switch-case cannot handle string values.",
      "Default case must always be at the end.",
      "Switch-case cannot have multiple cases for the same output."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i < 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "1\n3",
      "1\n2\n3\n4",
      "1\n3\n5\n7",
      "0\n2\n4"
    ]
  },
  {
    "q": "Which of the following is NOT true about the for loop in JavaScript?",
    "o": [
      "The increment step is optional.",
      "A for loop can be used to iterate over arrays.",
      "Leaving the condition empty results in an infinite loop.",
      "The for loop must always have an initialization statement."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 5;\nwhile (count > 0) {\n    console.log(count);\n    count -= 2;\n}",
    "o": [
      "5\n3\n1",
      "5\n4\n3\n2\n1",
      "5\n3\n2\n1",
      "5\n4\n3\n1"
    ]
  },
  {
    "q": "Which statement about while loops is correct?",
    "o": [
      "A while loop continues running as long as the condition is true.",
      "A while loop must have a break statement to terminate.",
      "A while loop runs at least once before checking the condition.",
      "A while loop can only be used with numbers."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let x = 10;\ndo {\n    console.log(x);\n    x -= 3;\n} while (x > 4);",
    "o": [
      "10\n7\n4",
      "10\n7\n4\n1",
      "10\n7",
      "10\n9\n8\n7"
    ]
  },
  {
    "q": "Which of the following is a characteristic of a do-while loop?",
    "o": [
      "The loop body executes at least once regardless of the condition.",
      "A do-while loop does not allow break statements.",
      "The condition is checked before executing the loop body.",
      "A do-while loop can only be used with numbers."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let temperature = 30;\nif (temperature > 35) {\n    console.log(\"Hot\");\n} else if (temperature >= 25) {\n    console.log(\"Warm\");\n} else {\n    console.log(\"Cold\");\n}",
    "o": [
      "Warm",
      "Hot",
      "Cold",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following statements is true about JavaScript if-else?",
    "o": [
      "Multiple if-else conditions can be used to handle different cases.",
      "An if statement must always be followed by an else block.",
      "Only one if statement is allowed per function.",
      "Else-if cannot be used in JavaScript."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Yellow\");\n        break;\n    case \"apple\":\n        console.log(\"Red\");\n        break;\n    case \"grape\":\n        console.log(\"Purple\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Red",
      "Yellow",
      "Purple",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following statements about switch-case is incorrect?",
    "o": [
      "A break statement prevents fall-through behavior.",
      "Switch cases compare values using strict equality (===).",
      "The default case is mandatory in every switch statement.",
      "Multiple cases can execute the same block of code."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i >= 6; i -= 2) {\n    console.log(i);\n}",
    "o": [
      "10\n8\n6",
      "10\n9\n8\n7\n6",
      "10\n8\n6\n4",
      "10\n7\n4"
    ]
  },
  {
    "q": "Which of the following best describes a for loop?",
    "o": [
      "A loop that runs a fixed number of times based on a condition.",
      "A loop that always runs indefinitely.",
      "A loop that executes only once before checking the condition.",
      "A loop that must contain an increment statement."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let num = 1;\nwhile (num < 4) {\n    console.log(num);\n    num++;\n}",
    "o": [
      "1\n2\n3",
      "1\n2\n3\n4",
      "0\n1\n2",
      "1\n3\n5"
    ]
  },
  {
    "q": "Which of the following is true about while loops?",
    "o": [
      "A while loop continues execution as long as the condition is true.",
      "A while loop must have a break statement to exit.",
      "A while loop runs at least once before checking the condition.",
      "A while loop cannot be used with arrays."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 2;\ndo {\n    console.log(count);\n    count *= 2;\n} while (count < 10);",
    "o": [
      "2\n4\n8",
      "2\n4\n6\n8",
      "2\n4\n8\n10",
      "2\n3\n4"
    ]
  },
  {
    "q": "Which of the following is a characteristic of a do-while loop?",
    "o": [
      "The loop executes at least once before checking the condition.",
      "The loop condition is checked before executing the loop body.",
      "The loop cannot be used with non-numeric values.",
      "A do-while loop cannot be exited using a break statement."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num % 2 === 0) {\n    console.log(\"Even\");\n} else {\n    console.log(\"Odd\");\n}",
    "o": [
      "Odd",
      "Even",
      "Undefined",
      "NaN"
    ]
  },
  {
    "q": "Which of the following statements about if-else is correct?",
    "o": [
      "An if-else block can contain multiple else-if conditions.",
      "An else statement is required in every if-else block.",
      "Only one if statement is allowed per script.",
      "Else must come before if in JavaScript."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let grade = \"B\";\nswitch (grade) {\n    case \"A\":\n        console.log(\"Excellent\");\n        break;\n    case \"B\":\n        console.log(\"Good\");\n        break;\n    case \"C\":\n        console.log(\"Average\");\n        break;\n    default:\n        console.log(\"Fail\");\n}",
    "o": [
      "Good",
      "Excellent",
      "Average",
      "Fail"
    ]
  },
  {
    "q": "Which statement is false about switch-case in JavaScript?",
    "o": [
      "Switch statements can compare values using strict equality (===).",
      "A break statement is required to prevent fall-through behavior.",
      "Every switch must have a default case.",
      "Multiple cases can share the same code block."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 5; i < 10; i += 2) {\n    console.log(i);\n}",
    "o": [
      "5\n7\n9",
      "5\n6\n7\n8\n9",
      "5\n8",
      "5\n7\n10"
    ]
  },
  {
    "q": "Which of the following is NOT a valid for loop declaration?",
    "o": [
      "for (let i = 0; i < 5; i++)",
      "for (let i = 10; i >= 0; i--)",
      "for (let i = 1; i < 5; i *= 2)",
      "for (let i = 0; i < 5; i--)"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 3;\nwhile (count > 0) {\n    console.log(count);\n    count--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "1\n2\n3",
      "3\n2\n0"
    ]
  },
  {
    "q": "Which statement is true about while loops in JavaScript?",
    "o": [
      "A while loop runs as long as the condition is true.",
      "A while loop always runs at least once.",
      "A while loop must include a break statement to exit.",
      "A while loop cannot modify variables inside its body."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let x = 10;\ndo {\n    console.log(x);\n    x -= 4;\n} while (x > 0);",
    "o": [
      "10\n6\n2",
      "10\n7\n4\n1",
      "10\n6\n3\n0",
      "10\n5\n1"
    ]
  },
  {
    "q": "Which of the following correctly describes the behavior of a do-while loop?",
    "o": [
      "It executes at least once, even if the condition is false initially.",
      "It checks the condition before executing the loop body.",
      "It only runs if the condition is true before entering the loop.",
      "It cannot be exited using a break statement."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let temperature = 35;\nif (temperature > 30) {\n    console.log(\"Hot\");\n} else if (temperature > 20) {\n    console.log(\"Warm\");\n} else {\n    console.log(\"Cold\");\n}",
    "o": [
      "Hot",
      "Warm",
      "Cold",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is a valid way to write an if-else statement?",
    "o": [
      "if (x > 10) { console.log(\"Big\"); } else { console.log(\"Small\"); }",
      "if x > 10 then console.log(\"Big\"); else console.log(\"Small\");",
      "if (x > 10) console.log(\"Big\"); else console.log(\"Small\")",
      "if (x > 10) { console.log(\"Big\"); else console.log(\"Small\"); }"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let day = \"Monday\";\nswitch (day) {\n    case \"Monday\":\n    case \"Wednesday\":\n    case \"Friday\":\n        console.log(\"Workout Day\");\n        break;\n    case \"Sunday\":\n        console.log(\"Rest Day\");\n        break;\n    default:\n        console.log(\"Regular Day\");\n}",
    "o": [
      "Workout Day",
      "Rest Day",
      "Regular Day",
      "Undefined"
    ]
  },
  {
    "q": "What happens if you forget to include a break statement in a switch-case?",
    "o": [
      "The execution falls through to the next case until a break is encountered.",
      "The program throws an error.",
      "Only the matched case executes and exits automatically.",
      "The switch statement terminates immediately."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 10; i *= 3) {\n    console.log(i);\n}",
    "o": [
      "1\n3\n9",
      "1\n2\n3\n4\n5",
      "1\n4\n7\n10",
      "1\n3\n6\n9"
    ]
  },
  {
    "q": "Which of the following for loop variations is incorrect?",
    "o": [
      "for (let i = 5; i >= 0; i--)",
      "for (let i = 1; i < 10; i += 2)",
      "for (let i = 0; i < 5; i++)",
      "for (let i = 10; i > 0; i++)"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let num = 4;\nwhile (num < 20) {\n    console.log(num);\n    num *= 2;\n}",
    "o": [
      "4\n8\n16",
      "4\n6\n8\n10",
      "4\n8\n12\n16\n20",
      "4\n8\n12\n16"
    ]
  },
  {
    "q": "Which of the following statements about while loops is false?",
    "o": [
      "While loops execute at least once before checking the condition.",
      "While loops continue executing as long as the condition remains true.",
      "A while loop can result in an infinite loop if the condition never becomes false.",
      "A while loop can be exited using a break statement."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let y = 1;\ndo {\n    console.log(y);\n    y += 3;\n} while (y < 10);",
    "o": [
      "1\n4\n7",
      "1\n3\n5\n7\n9",
      "1\n2\n3\n4\n5\n6\n7\n8\n9",
      "1\n4\n8\n12"
    ]
  },
  {
    "q": "Which of the following correctly explains the do-while loop?",
    "o": [
      "It ensures that the loop body runs at least once before checking the condition.",
      "It does not require a condition to execute.",
      "It executes only if the condition is true at the start.",
      "It is identical to a while loop."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let score = 85;\nif (score >= 90) {\n    console.log(\"A\");\n} else if (score >= 80) {\n    console.log(\"B\");\n} else {\n    console.log(\"C\");\n}",
    "o": [
      "B",
      "A",
      "C",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following statements about the if-else construct is true?",
    "o": [
      "An if statement can exist without an else.",
      "Every if must have an else block.",
      "JavaScript does not support nested if statements.",
      "An else block executes only if the if condition is true."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Yellow\");\n        break;\n    case \"apple\":\n        console.log(\"Red\");\n        break;\n    case \"grape\":\n        console.log(\"Purple\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Red",
      "Yellow",
      "Purple",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following is true about the switch statement?",
    "o": [
      "It compares values using strict comparison (===).",
      "It only works with numerical values.",
      "It can only have one case per switch block.",
      "It does not require a break statement."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 8; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6\n8",
      "2\n3\n4\n5\n6\n7\n8",
      "2\n4\n8",
      "2\n4\n6\n8\n10"
    ]
  },
  {
    "q": "Which of the following will result in an infinite loop?",
    "o": [
      "for (let i = 5; i > 0; i--) { console.log(i); }",
      "while (true) { console.log(\"Looping\"); }",
      "do { console.log(\"Running\"); } while (false);",
      "for (let i = 0; i < 10; i++) { console.log(i); }"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 3;\nwhile (count > 0) {\n    console.log(count);\n    count--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "3\n1\n0",
      "3\n3\n3"
    ]
  },
  {
    "q": "Which of the following is a correct way to use a do-while loop?",
    "o": [
      "do { console.log(\"Hello\"); } while (false);",
      "while (false) { console.log(\"Hello\"); }",
      "do (console.log(\"Hello\")); while (false);",
      "do while { console.log(\"Hello\"); }"
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let num = 10;\ndo {\n    console.log(num);\n    num -= 2;\n} while (num > 4);",
    "o": [
      "10\n8\n6",
      "10\n9\n8\n7\n6",
      "10\n8\n6\n4",
      "10"
    ]
  },
  {
    "q": "Which statement correctly describes how a do-while loop works?",
    "o": [
      "It always executes the loop body at least once before checking the condition.",
      "It is identical to a while loop in execution.",
      "It only executes if the condition is true at the beginning.",
      "It cannot contain a break statement."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = 7;\nif (num % 2 === 0) {\n    console.log(\"Even\");\n} else {\n    console.log(\"Odd\");\n}",
    "o": [
      "Odd",
      "Even",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is true about an else block?",
    "o": [
      "It executes only if the if condition is false.",
      "It must always be followed by another if statement.",
      "It runs regardless of the if condition.",
      "It can only be used with a switch statement."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let day = \"Monday\";\nswitch (day) {\n    case \"Monday\":\n    case \"Tuesday\":\n        console.log(\"Weekday\");\n        break;\n    case \"Saturday\":\n    case \"Sunday\":\n        console.log(\"Weekend\");\n        break;\n    default:\n        console.log(\"Invalid day\");\n}",
    "o": [
      "Weekday",
      "Weekend",
      "Invalid day",
      "Monday"
    ]
  },
  {
    "q": "Which of the following will cause a fall-through in a switch statement?",
    "o": [
      "Omitting the break statement in a case block.",
      "Using a return statement inside a case block.",
      "Placing a default case at the beginning.",
      "Using a continue statement instead of break."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i >= 5; i--) {\n    console.log(i);\n}",
    "o": [
      "10\n9\n8\n7\n6\n5",
      "10\n8\n6\n4\n2",
      "10\n9\n8\n7\n6",
      "10\n9\n8\n7\n6\n5\n4"
    ]
  },
  {
    "q": "Which of the following is a correct way to declare an infinite loop using a for loop?",
    "o": [
      "for (;;) { console.log(\"Looping\"); }",
      "for (let i = 0; i < 10; i--) { console.log(i); }",
      "for (let i = 1; i > 0; i++) { console.log(i); }",
      "for (let i = 0; i < 5; i++) { console.log(i); }"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let x = 1;\nwhile (x < 4) {\n    console.log(\"Iteration \" + x);\n    x++;\n}",
    "o": [
      "Iteration 1\nIteration 2\nIteration 3",
      "Iteration 1\nIteration 2\nIteration 3\nIteration 4",
      "Iteration 1",
      "Iteration 1\nIteration 3"
    ]
  },
  {
    "q": "Which of the following statements about a while loop is correct?",
    "o": [
      "It runs as long as the condition is true.",
      "It executes at least once even if the condition is false.",
      "It requires an increment inside the condition.",
      "It cannot be nested inside another loop."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let i = 0;\ndo {\n    console.log(\"Count: \" + i);\n    i += 2;\n} while (i < 6);",
    "o": [
      "Count: 0\nCount: 2\nCount: 4",
      "Count: 0\nCount: 2\nCount: 4\nCount: 6",
      "Count: 0\nCount: 1\nCount: 2",
      "Count: 0"
    ]
  },
  {
    "q": "Which of the following is a key difference between a while loop and a do-while loop?",
    "o": [
      "A do-while loop always executes at least once.",
      "A while loop runs even if the condition is false initially.",
      "A do-while loop does not check the condition before running the first iteration.",
      "A while loop requires a break statement to stop."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = -3;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following correctly uses the ternary operator to check if a number is even?",
    "o": [
      "let result = (num % 2 === 0) ? \"Even\" : \"Odd\";",
      "let result = num % 2 === 0 : \"Even\" ? \"Odd\";",
      "let result = (num / 2 == 0) ? \"Even\" : \"Odd\";",
      "let result = (num % 2 == 1) ? \"Even\" : \"Odd\";"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let color = \"red\";\nswitch (color) {\n    case \"blue\":\n        console.log(\"Sky\");\n        break;\n    case \"green\":\n        console.log(\"Grass\");\n        break;\n    case \"red\":\n        console.log(\"Apple\");\n        break;\n    default:\n        console.log(\"Unknown\");\n}",
    "o": [
      "Apple",
      "Sky",
      "Grass",
      "Unknown"
    ]
  },
  {
    "q": "Which of the following cases in a switch statement will execute if no matching case is found?",
    "o": [
      "default",
      "first case",
      "last case",
      "None, the switch statement will not execute anything"
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 2; i <= 8; i += 2) {\n    console.log(i);\n}",
    "o": [
      "2\n4\n6\n8",
      "2\n3\n4\n5\n6\n7\n8",
      "2\n4\n6",
      "2\n4\n6\n8\n10"
    ]
  },
  {
    "q": "Which of the following correctly implements a nested for loop?",
    "o": [
      "for (let i = 1; i <= 3; i++) {\n    for (let j = 1; j <= 2; j++) {\n        console.log(i, j);\n    }\n}",
      "for (let i = 1; i <= 3; i++) {\n    console.log(i);\n    for (let j = 1; j >= 2; j--) {\n        console.log(j);\n    }\n}",
      "for (let i = 1; i <= 3; j++) {\n    for (let j = 1; j <= 2; i++) {\n        console.log(i, j);\n    }\n}",
      "for (let i = 1; i <= 3; j++) {\n    console.log(i, j);\n}"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let count = 5;\nwhile (count > 0) {\n    console.log(\"Countdown: \" + count);\n    count--;\n}",
    "o": [
      "Countdown: 5\nCountdown: 4\nCountdown: 3\nCountdown: 2\nCountdown: 1",
      "Countdown: 5\nCountdown: 4\nCountdown: 3\nCountdown: 2\nCountdown: 1\nCountdown: 0",
      "Countdown: 5\nCountdown: 4\nCountdown: 3",
      "No output, the loop will not run"
    ]
  },
  {
    "q": "Which of the following best describes the behavior of a do-while loop?",
    "o": [
      "Executes at least once before checking the condition.",
      "Does not execute if the condition is false initially.",
      "Always executes exactly twice.",
      "Requires a break statement to stop execution."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x === '10') {\n    console.log(\"Equal\");\n} else {\n    console.log(\"Not Equal\");\n}",
    "o": [
      "Not Equal",
      "Equal",
      "10",
      "Undefined"
    ]
  },
  {
    "q": "Which statement correctly represents an if-else block in JavaScript?",
    "o": [
      "if (condition) { /* code */ } else { /* code */ }",
      "if condition then { /* code */ } else { /* code */ }",
      "if { condition } ( /* code */ ) else { /* code */ }",
      "if [condition] { /* code */ } else ( /* code */ )"
    ]
  },
  {
    "q": "What will be the output of the following switch statement?",
    "l": "javascript",
    "c": "let day = 3;\nswitch (day) {\n    case 1:\n        console.log(\"Monday\");\n        break;\n    case 2:\n        console.log(\"Tuesday\");\n        break;\n    case 3:\n        console.log(\"Wednesday\");\n        break;\n    default:\n        console.log(\"Invalid day\");\n}",
    "o": [
      "Wednesday",
      "Monday",
      "Tuesday",
      "Invalid day"
    ]
  },
  {
    "q": "What happens if a break statement is missing in a switch-case structure?",
    "o": [
      "Execution falls through to the next case.",
      "The switch statement terminates immediately.",
      "An error is thrown.",
      "The default case executes automatically."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n    if (i === 3) {\n        continue;\n    }\n    console.log(i);\n}",
    "o": [
      "1\n2\n4\n5",
      "1\n2\n3\n4\n5",
      "1\n2\n3",
      "2\n3\n4\n5"
    ]
  },
  {
    "q": "Which of the following loops ensures execution at least once, even if the condition is false?",
    "o": [
      "do-while loop",
      "while loop",
      "for loop",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let n = 3;\nwhile (n > 0) {\n    console.log(n);\n    n--;\n}",
    "o": [
      "3\n2\n1",
      "3\n2\n1\n0",
      "3\n2",
      "No output"
    ]
  },
  {
    "q": "Which of the following is a valid do-while loop syntax?",
    "o": [
      "do { console.log(\"Hello\"); } while (condition);",
      "while (condition) { console.log(\"Hello\"); } do;",
      "do { console.log(\"Hello\"); condition };",
      "loop do { console.log(\"Hello\"); } while (condition);"
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let num = -5;\nif (num > 0) {\n    console.log(\"Positive\");\n} else if (num < 0) {\n    console.log(\"Negative\");\n} else {\n    console.log(\"Zero\");\n}",
    "o": [
      "Negative",
      "Positive",
      "Zero",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following correctly represents a ternary (conditional) operator?",
    "o": [
      "condition ? expression1 : expression2",
      "if (condition) { expression1 } else { expression2 }",
      "condition: expression1; expression2",
      "condition -> expression1, expression2"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = \"apple\";\nswitch (fruit) {\n    case \"banana\":\n        console.log(\"Banana\");\n        break;\n    case \"apple\":\n        console.log(\"Apple\");\n        break;\n    case \"grape\":\n        console.log(\"Grape\");\n        break;\n    default:\n        console.log(\"Unknown fruit\");\n}",
    "o": [
      "Apple",
      "Banana",
      "Grape",
      "Unknown fruit"
    ]
  },
  {
    "q": "What is the purpose of the default case in a switch statement?",
    "o": [
      "It executes when no matching case is found.",
      "It always executes before any case.",
      "It stops the switch statement from executing.",
      "It throws an error if no match is found."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 10; i > 5; i--) {\n    console.log(i);\n}",
    "o": [
      "10\n9\n8\n7\n6",
      "10\n9\n8\n7\n6\n5",
      "10\n9\n8\n7",
      "10\n9\n8\n7\n6\n5\n4"
    ]
  },
  {
    "q": "Which of the following correctly represents an infinite while loop?",
    "o": [
      "while (true) { console.log(\"Looping\"); }",
      "while (false) { console.log(\"Looping\"); }",
      "while (i > 0) { console.log(\"Looping\"); }",
      "while (null) { console.log(\"Looping\"); }"
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 1;\ndo {\n    console.log(count);\n    count++;\n} while (count <= 3);",
    "o": [
      "1\n2\n3",
      "0\n1\n2\n3",
      "1\n2",
      "1"
    ]
  },
  {
    "q": "Which statement is true about a do-while loop?",
    "o": [
      "It executes the block at least once before checking the condition.",
      "It checks the condition before execution like a while loop.",
      "It does not allow break statements inside the loop.",
      "It cannot be used for iteration over arrays."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let x = 10;\nif (x === '10') {\n    console.log('Equal');\n} else {\n    console.log('Not Equal');\n}",
    "o": [
      "Not Equal",
      "Equal",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following statements about if-else in JavaScript is true?",
    "o": [
      "The else block is optional.",
      "An if statement must always be followed by an else block.",
      "if statements can only compare numbers.",
      "JavaScript does not support else-if chaining."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let num = 2;\nswitch (num) {\n    case 1:\n    case 2:\n        console.log('Matched');\n        break;\n    default:\n        console.log('Not Matched');\n}",
    "o": [
      "Matched",
      "Not Matched",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following is a valid use of a switch statement?",
    "o": [
      "switch(expression) { case value1: ... break; case value2: ... break; default: ... }",
      "switch(expression) ( case value1: ... break; case value2: ... break; default: ... )",
      "switch { case value1: ... break; case value2: ... break; default: ... }",
      "switch expression { case value1: ... break; case value2: ... break; default: ... }"
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "1\n3\n5",
      "1\n2\n3\n4\n5",
      "1\n3\n5\n7",
      "1\n3\n5\n6"
    ]
  },
  {
    "q": "Which statement about the for loop in JavaScript is correct?",
    "o": [
      "It consists of an initialization, condition, and an increment/decrement step.",
      "A for loop must always have all three components.",
      "The condition is evaluated after each iteration.",
      "It can only iterate over arrays."
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let i = 1;\nwhile (i < 4) {\n    console.log(i);\n    i++;\n}",
    "o": [
      "1\n2\n3",
      "1\n2\n3\n4",
      "1\n2",
      "0\n1\n2\n3"
    ]
  },
  {
    "q": "Which of the following best describes the while loop?",
    "o": [
      "It executes repeatedly as long as the condition is true.",
      "It executes at least once before checking the condition.",
      "It runs for a fixed number of iterations.",
      "It cannot be used for infinite loops."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let count = 0;\ndo {\n    console.log('Running');\n} while (count > 0);",
    "o": [
      "Running",
      "No output",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which scenario is best suited for using a do-while loop?",
    "o": [
      "When you want the loop body to execute at least once before checking a condition.",
      "When you need a fixed number of iterations.",
      "When the loop condition must be checked before execution.",
      "When iterating over an array using forEach."
    ]
  },
  {
    "q": "What will be the output of the following if-else statement?",
    "l": "javascript",
    "c": "let a = 5, b = 10;\nif (a > b) {\n    console.log('A is greater');\n} else if (a === b) {\n    console.log('Equal');\n} else {\n    console.log('B is greater');\n}",
    "o": [
      "B is greater",
      "A is greater",
      "Equal",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a valid if-else statement in JavaScript?",
    "o": [
      "if (x > 5) { console.log('Greater'); } else { console.log('Smaller or Equal'); }",
      "if x > 5 then console.log('Greater') else console.log('Smaller or Equal')",
      "if x > 5 { console.log('Greater') } else console.log('Smaller or Equal');",
      "if (x > 5) console.log('Greater') else console.log('Smaller or Equal');"
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?",
    "l": "javascript",
    "c": "let fruit = 'apple';\nswitch (fruit) {\n    case 'banana':\n        console.log('Banana selected');\n        break;\n    case 'apple':\n        console.log('Apple selected');\n        break;\n    default:\n        console.log('Other fruit selected');\n}",
    "o": [
      "Apple selected",
      "Banana selected",
      "Other fruit selected",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about the switch statement in JavaScript?",
    "o": [
      "The break statement is needed to prevent fall-through to the next case.",
      "The default case must always be the last case in a switch statement.",
      "Switch cases can only compare numbers.",
      "A switch statement can only handle string comparisons."
    ]
  },
  {
    "q": "What will be the output of the following for loop?",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n    console.log(i * 2);\n}",
    "o": [
      "0\n2\n4",
      "1\n2\n3",
      "0\n1\n2",
      "2\n4\n6"
    ]
  },
  {
    "q": "Which of the following is a correct syntax for a for loop?",
    "o": [
      "for (let i = 0; i < 5; i++) { console.log(i); }",
      "for let i = 0; i < 5; i++ { console.log(i); }",
      "for (i = 0; i < 5; i++) console.log(i)",
      "for (i = 0, i < 5, i++) { console.log(i); }"
    ]
  },
  {
    "q": "What will be the output of the following while loop?",
    "l": "javascript",
    "c": "let x = 4;\nwhile (x > 0) {\n    console.log(x);\n    x--;\n}",
    "o": [
      "4\n3\n2\n1",
      "3\n2\n1",
      "4\n3\n2\n1\n0",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a correct while loop?",
    "o": [
      "while (x > 0) { console.log(x); x--; }",
      "while x > 0 { console.log(x); x--; }",
      "while (x > 0) console.log(x); x--;",
      "while (x > 0) { console.log(x) x--; }"
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?",
    "l": "javascript",
    "c": "let y = 0;\ndo {\n    console.log('Executing');\n    y++;\n} while (y < 2);",
    "o": [
      "Executing\nExecuting",
      "Executing",
      "No output",
      "Error"
    ]
  },
  {
    "q": "Which of the following is a key characteristic of a do-while loop?",
    "o": [
      "It executes the loop body at least once before checking the condition.",
      "It always executes indefinitely.",
      "It requires an iterator variable like for loops.",
      "It does not support break statements."
    ]
  },
  {
    "q": "What is the main difference between speed and velocity?",
    "o": [
      "Velocity includes direction, while speed does not.",
      "Speed includes direction, while velocity does not.",
      "They are exactly the same.",
      "Velocity is always greater than speed."
    ]
  },
  {
    "q": "Which of Newton’s Laws explains why a person in a car moves forward when the brakes are suddenly applied?",
    "o": [
      "First Law (Inertia)",
      "Second Law (Force and Acceleration)",
      "Third Law (Action and Reaction)",
      "None of the above"
    ]
  },
  {
    "q": "What type of friction occurs when an object is at rest and resists motion?",
    "o": [
      "Static friction",
      "Sliding friction",
      "Rolling friction",
      "Air resistance"
    ]
  },
  {
    "q": "Which type of energy is stored in a stretched rubber band?",
    "o": [
      "Potential energy",
      "Kinetic energy",
      "Thermal energy",
      "Electrical energy"
    ]
  },
  {
    "q": "What happens to the kinetic energy of an object if its velocity doubles?",
    "o": [
      "It quadruples.",
      "It doubles.",
      "It remains the same.",
      "It is halved."
    ]
  },
  {
    "q": "Which law explains why rockets move forward by expelling gas backward?",
    "o": [
      "Newton's Third Law",
      "Newton's First Law",
      "Newton's Second Law",
      "The Law of Universal Gravitation"
    ]
  },
  {
    "q": "Which of the following is NOT an example of an inclined plane?",
    "o": [
      "A wheel",
      "A ramp",
      "A sloping road",
      "A slide"
    ]
  },
  {
    "q": "Which part of an atom is involved in electrical conductivity?",
    "o": [
      "Electrons",
      "Protons",
      "Neutrons",
      "Nucleus"
    ]
  },
  {
    "q": "What happens when like magnetic poles are brought close to each other?",
    "o": [
      "They repel.",
      "They attract.",
      "They cancel out.",
      "They lose magnetism."
    ]
  },
  {
    "q": "Which type of wave requires a medium to travel through?",
    "o": [
      "Mechanical waves",
      "Electromagnetic waves",
      "Light waves",
      "X-rays"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "let x = 10;\nif (x > 5) {\n    console.log(\"Greater than 5\");\n} else {\n    console.log(\"Less than or equal to 5\");\n}",
    "o": [
      "Greater than 5",
      "Less than or equal to 5",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which statement correctly describes the 'switch' statement in JavaScript?",
    "o": [
      "It is used to execute one block of code out of multiple options based on a value.",
      "It can only handle numbers as cases.",
      "It must always include a default case.",
      "It replaces all 'if' statements in JavaScript."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "let num = 3;\nswitch (num) {\n    case 1:\n        console.log(\"One\");\n    case 2:\n        console.log(\"Two\");\n    case 3:\n        console.log(\"Three\");\n    default:\n        console.log(\"Default\");\n}",
    "o": [
      "Three\nDefault",
      "Three",
      "Three\nTwo\nOne",
      "Error"
    ]
  },
  {
    "q": "Which loop is guaranteed to execute at least once?",
    "o": [
      "do-while loop",
      "for loop",
      "while loop",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "let i = 0;\ndo {\n    console.log(i);\n    i++;\n} while (i < 3);",
    "o": [
      "0\n1\n2",
      "1\n2\n3",
      "0\n1\n2\n3",
      "3"
    ]
  },
  {
    "q": "Which of the following is true about the 'for' loop in JavaScript?",
    "o": [
      "It consists of an initialization, condition, and iteration expression.",
      "It must always run at least once.",
      "It does not support decrementing loops.",
      "It requires a break statement to stop execution."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "for (let i = 0; i < 5; i += 2) {\n    console.log(i);\n}",
    "o": [
      "0\n2\n4",
      "1\n3\n5",
      "0\n1\n2\n3\n4",
      "Error"
    ]
  },
  {
    "q": "Which statement is used to exit a loop in JavaScript?",
    "o": [
      "break",
      "continue",
      "exit",
      "stop"
    ]
  },
  {
    "q": "What does the 'continue' statement do in a loop?",
    "o": [
      "Skips the current iteration and moves to the next one.",
      "Exits the loop completely.",
      "Restarts the loop from the beginning.",
      "Pauses the loop execution."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "for (let i = 1; i <= 5; i++) {\n    if (i === 3) {\n        continue;\n    }\n    console.log(i);\n}",
    "o": [
      "1\n2\n4\n5",
      "1\n2\n3\n4\n5",
      "1\n2\n5",
      "Error"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "let num = 10;\nif (num > 5) {\n  console.log(\"Greater than 5\");\n} else {\n  console.log(\"Less than or equal to 5\");\n}",
    "o": [
      "Greater than 5",
      "Less than or equal to 5",
      "undefined",
      "Error"
    ]
  },
  {
    "q": "Which of the following is the correct syntax for a switch-case statement in JavaScript?",
    "o": [
      "switch(expression) { case value: statement; break; }",
      "switch(expression) { case value => statement; break; }",
      "switch(expression) [ case value: statement; break; ]",
      "switch expression { case value: statement; break; }"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let x = 3;\nswitch (x) {\n  case 1:\n    console.log(\"One\");\n    break;\n  case 3:\n    console.log(\"Three\");\n    break;\n  default:\n    console.log(\"Other\");\n}",
    "o": [
      "Three",
      "One",
      "Other",
      "Error"
    ]
  },
  {
    "q": "Which loop is guaranteed to execute at least once in JavaScript?",
    "o": [
      "do-while loop",
      "for loop",
      "while loop",
      "None of the above"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code snippet?\n",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n  console.log(i);\n}",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ]
  },
  {
    "q": "Which statement is true about the while loop in JavaScript?",
    "o": [
      "It runs as long as the condition evaluates to true.",
      "It always runs at least once.",
      "It requires an initialization inside the loop.",
      "It runs for a fixed number of iterations."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let i = 0;\ndo {\n  console.log(i);\n  i++;\n} while (i < 3);",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ]
  },
  {
    "q": "Which of the following loops is best suited when the number of iterations is known beforehand?",
    "o": [
      "for loop",
      "while loop",
      "do-while loop",
      "switch loop"
    ]
  },
  {
    "q": "Which of the following correctly describes how the break statement works in a loop?",
    "o": [
      "It immediately exits the loop.",
      "It skips the current iteration and continues with the next iteration.",
      "It restarts the loop from the beginning.",
      "It only works inside a switch statement."
    ]
  },
  {
    "q": "What is the purpose of the continue statement in a loop?",
    "o": [
      "It skips the current iteration and proceeds to the next iteration.",
      "It exits the loop completely.",
      "It restarts the loop from the beginning.",
      "It pauses the loop execution."
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let a = 5, b = '5';\nconsole.log(a == b);\nconsole.log(a === b);",
    "o": [
      "true false",
      "false true",
      "true true",
      "false false"
    ]
  },
  {
    "q": "Which of the following is NOT a valid way to declare a variable in JavaScript?",
    "o": [
      "using 'var'",
      "using 'let'",
      "using 'const'",
      "using 'define'"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript function?\n",
    "l": "javascript",
    "c": "function test() {\n  console.log(x);\n  var x = 10;\n}\ntest();",
    "o": [
      "undefined",
      "10",
      "ReferenceError",
      "null"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let arr = [1, 2, 3];\narr.push(4);\nconsole.log(arr.length);",
    "o": [
      "4",
      "3",
      "undefined",
      "Error"
    ]
  },
  {
    "q": "Which array method is used to remove the last element from an array in JavaScript?",
    "o": [
      "pop()",
      "shift()",
      "slice()",
      "splice()"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let text = \"Hello\";\nconsole.log(text.charAt(1));",
    "o": [
      "e",
      "H",
      "l",
      "o"
    ]
  },
  {
    "q": "Which of the following statements is true about JavaScript objects?",
    "o": [
      "Objects are key-value pairs.",
      "Objects are always immutable.",
      "Objects must have only string keys.",
      "Objects cannot contain functions."
    ]
  },
  {
    "q": "How do you correctly create a function in JavaScript?",
    "o": [
      "function myFunction() { }",
      "def myFunction() { }",
      "func myFunction() { }",
      "function: myFunction() { }"
    ]
  },
  {
    "q": "Which method can be used to convert a JSON string into a JavaScript object?",
    "o": [
      "JSON.parse()",
      "JSON.stringify()",
      "parse.JSON()",
      "stringify.JSON()"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code?\n",
    "l": "javascript",
    "c": "let obj = { a: 1, b: 2 };\ndelete obj.a;\nconsole.log(obj);",
    "o": [
      "{ b: 2 }",
      "{ a: 1, b: 2 }",
      "undefined",
      "null"
    ]
  },
  {
    "q": "What will be the output of the following JavaScript code using an if-else statement?\n",
    "l": "javascript",
    "c": "let num = 10;\nif (num > 5) {\n  console.log(\"Greater\");\n} else {\n  console.log(\"Smaller\");\n}",
    "o": [
      "Greater",
      "Smaller",
      "Error",
      "Undefined"
    ]
  },
  {
    "q": "Which of the following statements about if-else in JavaScript is true?",
    "o": [
      "An if statement can exist without an else statement.",
      "An else statement must always be present.",
      "You cannot use multiple if statements in a row.",
      "Else must always be the first statement in a block."
    ]
  },
  {
    "q": "What will be the output of the following switch-case statement?\n",
    "l": "javascript",
    "c": "let color = \"red\";\nswitch(color) {\n  case \"blue\":\n    console.log(\"Blue selected\");\n    break;\n  case \"red\":\n    console.log(\"Red selected\");\n    break;\n  default:\n    console.log(\"No color matched\");\n}",
    "o": [
      "Red selected",
      "Blue selected",
      "No color matched",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about switch-case statements in JavaScript?",
    "o": [
      "The 'break' statement prevents fall-through behavior.",
      "Each 'case' block must end with 'return'.",
      "'default' case is mandatory in every switch statement.",
      "Switch cases must always use numeric values."
    ]
  },
  {
    "q": "What will be the output of the following for loop?\n",
    "l": "javascript",
    "c": "for (let i = 0; i < 3; i++) {\n  console.log(i);\n}",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ]
  },
  {
    "q": "Which of the following correctly initializes a for loop?",
    "o": [
      "for (let i = 0; i < 10; i++)",
      "for i = 0; i < 10; i++",
      "for (i < 10; i++)",
      "for (let i; i < 10; i++)"
    ]
  },
  {
    "q": "What will be the output of the following while loop?\n",
    "l": "javascript",
    "c": "let x = 0;\nwhile (x < 3) {\n  console.log(x);\n  x++;\n}",
    "o": [
      "0 1 2",
      "1 2 3",
      "0 1 2 3",
      "Error"
    ]
  },
  {
    "q": "Which of the following is true about while loops in JavaScript?",
    "o": [
      "A while loop continues as long as the condition is true.",
      "A while loop always executes at least once.",
      "A while loop must include an increment operation inside it.",
      "A while loop cannot be used with boolean conditions."
    ]
  },
  {
    "q": "What will be the output of the following do-while loop?\n",
    "l": "javascript",
    "c": "let y = 5;\ndo {\n  console.log(y);\n  y--;\n} while (y > 2);",
    "o": [
      "5 4 3",
      "5 4 3 2",
      "5 4 3 2 1",
      "Error"
    ]
  },
  {
    "q": "Which of the following best describes a do-while loop?",
    "o": [
      "It executes the loop body at least once before checking the condition.",
      "It behaves exactly like a while loop.",
      "It never executes if the condition is false initially.",
      "It is only used for infinite loops."
    ]
  }
]